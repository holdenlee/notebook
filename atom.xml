<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Research Notebook</title>
    <link href="http://holdenlee.github.io/notebook/atom.xml" rel="self" />
    <link href="http://holdenlee.github.io/notebook" />
    <id>http://holdenlee.github.io/notebook/atom.xml</id>
    <author>
        <name>Holden Lee</name>
        <email>oldheneel@gmail.com</email>
    </author>
    <updated>2016-12-16T00:00:00Z</updated>
    <entry>
    <title>Embedding methods in NLP</title>
    <link href="http://holdenlee.github.io/notebook/posts/tcs/machine_learning/nlp/em_nlp.html" />
    <id>http://holdenlee.github.io/notebook/posts/tcs/machine_learning/nlp/em_nlp.html</id>
    <published>2016-12-16T00:00:00Z</published>
    <updated>2016-12-16T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>Embedding methods in NLP</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-12-16 
          , Modified: 2016-12-16 
	</p>
      
       <p>Tags: <a href="/tags/nlp.html">nlp</a>, <a href="/tags/word%20vectors.html">word vectors</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"> <ul>
 <li><a href="#emnlp">EMNLP</a><ul>
 <li><a href="#methods">Methods</a></li>
 <li><a href="#details">Details</a></li>
 <li><a href="#embeddings-for-multi-relational-data">Embeddings for multi-relational data</a></li>
 </ul></li>
 <li><a href="#spwc-recursive-deep-models-for-semantic-compositionality-over-a-sentiment-treebank">[SPWC] Recursive deep models for semantic compositionality over a sentiment treebank</a></li>
 <li><a href="#scmn16-reasoning-with-neural-tensor-networks-for-knowledge-base-completion">[SCMN16] Reasoning With Neural Tensor Networks for Knowledge Base Completion</a></li>
 </ul> </div>

  <div class="blog-main">
    <h2 id="emnlp">EMNLP</h2>
<p><a href="http://emnlp2014.org/tutorials.html#embedding">EMNLP 2014 tutorial</a></p>
<h3 id="methods">Methods</h3>
<ul>
<li>Ranking/retrieval
<ul>
<li>LSI</li>
<li>SSI</li>
</ul></li>
<li>Language modeling
<ul>
<li>NNLM</li>
<li>Word2vec</li>
<li>GloVe</li>
</ul></li>
<li>Supervised prediction
<ul>
<li>RNN(LM)</li>
<li>Convolutional nets for tagging (SENNA)</li>
</ul></li>
</ul>
<h3 id="details">Details</h3>
<ul>
<li>Bag of words (baseline)</li>
<li>LSI <span class="math inline">\(\phi(d) = Ud\)</span> (<span class="math inline">\(d\)</span> document as sum of words)</li>
<li>SSI Similarity of query <span class="math inline">\(q\)</span> to document <span class="math inline">\(d\)</span> given by <span class="math inline">\(f(q,d) = q^TWd\)</span>, <span class="math inline">\(W\)</span> from data.
<ul>
<li><span class="math inline">\(W\)</span> is big.</li>
<li>Make <span class="math inline">\(W\)</span> low rank. <span class="math inline">\(W=U^TV+I\)</span>.</li>
<li>Maximize AUC. Want <span class="math inline">\(f(q,d^+)&gt;f(q,d^-)\)</span>. (14)</li>
<li>Ex. cross-language retrieval</li>
<li>Better: replace AUC with rank weighted loss</li>
</ul></li>
<li><span class="math inline">\(n\)</span>-gram (baseline)</li>
<li>NNLM
<ul>
<li>Arrange in tree. Cluster dictionary according to semantics or frequency.</li>
</ul></li>
<li>Word2Vec
<ul>
<li>CBOW: predict current word from neighbors</li>
<li>Skip-gram: predict neighbors from current word</li>
<li>Compositionality (addition)</li>
</ul></li>
<li>NLP tasks: POS tagging, chunking (NP, VP), named entity recognition, semantic role labeling</li>
<li>Hand-made features, SVM. ASSERT. Pipeline
<ul>
<li>POS tagger, parser</li>
<li>NER tagging</li>
<li>Put together for SRL labeler</li>
</ul></li>
<li>Deep learning way
<ul>
<li>Avoid parse tree</li>
<li>Avoid hand-built features</li>
<li>Joint train NLP tasks on common embedding</li>
<li>Window approach: feed fixed-size window around each word</li>
<li>Sentence: feed whole sentence, tag 1 word at a time, convolutions handle variable length inputs. Max pool over time</li>
<li>Deep SRL
<ul>
<li>Softmax: Train for word tag likelihood, or</li>
<li>Sentence tag likelihood. Sentence score is sum of likelihoods for individual words and transition score</li>
</ul></li>
<li>Bad for rare words</li>
</ul></li>
<li>? semi-supervised (61)</li>
<li>Recursive NN’s
<ul>
<li>Socher ICML13, EMNLP13</li>
<li>Build sentence representations using parse tree <span class="math inline">\(f(W[c_1;c_2]+b)\)</span></li>
</ul></li>
<li>Paragraph vector predicts words in doc, <span class="math inline">\(n\)</span>-grams in the doc.</li>
<li>Words are combined with linear matrices dependendent on the P.O.S.: G. Dinu and M. Baroni. How to make words with vectors: Phrase generation in distributional semantics. ACL ’14.</li>
<li>Previous common belief in NLP: engineering syntactic features necessary for semantic tasks. One can do well by engineering a model/algorithm rather than features.</li>
</ul>
<h3 id="embeddings-for-multi-relational-data">Embeddings for multi-relational data</h3>
<ul>
<li>Embeddings for multi-relational data
<ul>
<li>Relation (sub, rel, obj)</li>
<li>WordNet: dictionary where each entity is a sense (synset).</li>
<li>Freebase</li>
<li>KB’s are hard to manipulate.
<ul>
<li>Large</li>
<li>Sparse</li>
<li>Noisy/incomplete</li>
</ul></li>
<li>Solutions:
<ul>
<li>Encode into low-dimensional vector spaces</li>
<li>Use representations to complete/visualize, in applications</li>
</ul></li>
<li>Link prediction
<ul>
<li>RESCAL (<span class="math inline">\(X_k\)</span> are matrices) <span class="math display">\[
\min_{A,R} \rc2 \pa{\sum_k \ve{X_k - AR_k A^T}_F^2} + \la_A \ve{A}_F^2 + \la_R \sum_k \ve{R_k}_F^2.
\]</span>
<ul>
<li>Downsides: many parameters, bad scalability, bad reconstruction criteria for binary data</li>
</ul></li>
<li>Ideas
<ul>
<li>Low-dimensionsal continuous vector embedding trained on similarity</li>
<li>Stochastic training based on ranking loss</li>
</ul></li>
<li><span class="math inline">\(d(sub, rel, obj) = -\ve{R^{left}s^T - R^{right} o^T}_1\)</span>. (Note: this is projection onto a common space, rather than something quadratic!)
<ul>
<li>SGD with negative examples</li>
<li>Still have problems</li>
</ul></li>
<li>Neural tensor networks
<ul>
<li><span class="math inline">\(d(sub, rel, obj) = u_r^T \tanh (h^TW_r t + V_r^1 h + V_3^2 t + b_r).\)</span></li>
<li><span class="math inline">\(d^3\)</span> parameters</li>
</ul></li>
<li>Model relations as translations
<ul>
<li>$d = _2^2.</li>
<li>there may exist embedding spaces in which relationships among concepts are all decribed by translations</li>
<li>Much fewer parameters. Does better!</li>
<li>Refinements (108)</li>
</ul></li>
</ul></li>
<li>Embeddings for information extraction
<ul>
<li>Entity linking: Identify mentions</li>
<li>Relation extraction: extract facts</li>
<li>Word-sense disambiguation is key</li>
<li>Embedding-based classifier to predict relation (Weston13, 11) (predict based on other text besides subj, obj. Can combine with KB</li>
<li>Universal schemas (I don’t get this.)</li>
</ul></li>
<li>Question answering
<ul>
<li>Subgraph embeddings: learn embeddings of questions and candidate answers (Bordes14) (Q: How to embed subgraph???)</li>
<li>Convert Freebase to Q&amp;A pairs.</li>
<li>Paraphrase questions</li>
</ul></li>
</ul></li>
<li>Issues
<ul>
<li>Must train embeddings together</li>
<li>Compression, blurring (How to one-shot learn new symbols?)</li>
<li>Sequential models suffer from long-term memory</li>
<li>Need many updates</li>
<li>Negative example sampling inefficient</li>
<li>How to use nonlinearity?</li>
</ul></li>
<li>Code
<ul>
<li><a href="www.torch.ch">Torch</a></li>
<li><a href="ronan.collobert.com/senna">SENNA</a></li>
<li><a href="www.fit.vutbr.cz/~imikolov/rnnlm">RNNLM</a></li>
<li><a href="code.google.com/p/word2vec">Word2vec</a></li>
<li><a href="nlp.stanford.edu/sentiment">Recursive NN</a></li>
<li><a href="github.com/glorotxa/sme">SME (multi-relational data)</a></li>
</ul></li>
</ul>
<h2 id="spwc-recursive-deep-models-for-semantic-compositionality-over-a-sentiment-treebank">[SPWC] Recursive deep models for semantic compositionality over a sentiment treebank</h2>
<p>Put triplet (subj, rel, obj) through tensor network to predict. <span class="math display">\[
g(e_1,R,e_2) = 
u_R^T f\pa{
e_1^T W_R^{[1:k]} e_2 + 
V_R\coltwo{e_1}{e_2} + b_R
}
\]</span></p>
<!--
(Q: how about subj, obj -> rel, etc.? Joint probability distribution makes more sense? What is relationship between prob and NN models?)
-->
<h2 id="scmn16-reasoning-with-neural-tensor-networks-for-knowledge-base-completion">[SCMN16] Reasoning With Neural Tensor Networks for Knowledge Base Completion</h2>
<p>Recursive neural tensor model</p>
<p>Sentiment Treebank: sentiment labels for phrases in parse trees of sentences. <a href="http://nlp.stanford.edu/sentiment">Website</a></p>
<p>Captures effects of negation and its scope.</p>
<ul>
<li>RNN with a classifier at each node in the parse tree that predicts sentiment in one of 5 classes. (<span class="math inline">\(W\)</span> is the same matrix.) (Q: how do you make it a binary tree?)</li>
<li>MV-RNN (matrix-vector): represent every word and longer phrase in parse tree as both vector and matrix (initialized as <span class="math inline">\(I_d+\)</span>noise). Matrix of one multiplied by vector of other. (parameters is large and depends on vocab)</li>
<li>RNTN allows quadratic interaction: <span class="math inline">\(p = f\pa{(b\,c)V^{[1:d]}\coltwo bc + W \coltwo bc}\)</span>.</li>
</ul>
<p>Train: Classification at each node. Minimize KL-divergence.</p>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>
<entry>
    <title>Control theory</title>
    <link href="http://holdenlee.github.io/notebook/posts/tcs/machine_learning/reinforcement_learning/control_theory.html" />
    <id>http://holdenlee.github.io/notebook/posts/tcs/machine_learning/reinforcement_learning/control_theory.html</id>
    <published>2016-12-06T00:00:00Z</published>
    <updated>2016-12-06T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>Control theory</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-12-06 
          , Modified: 2016-12-06 
	</p>
      
       <p>Tags: <a href="/tags/control%20theory.html">control theory</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"> <ul>
 <li><a href="#introduction">1 Introduction</a></li>
 <li><a href="#controllability">2 Controllability</a><ul>
 <li><a href="#observations">Observations</a></li>
 <li><a href="#bang-bang">Bang-bang</a></li>
 </ul></li>
 </ul> </div>

  <div class="blog-main">
    <p><a href="https://math.berkeley.edu/~evans/control.course.pdf">Course notes</a></p>
<h2 id="introduction">1 Introduction</h2>
Setup
<span class="math display">\[\begin{align}
\dot x(t) &amp;= f(x(t),\al(t))\\
x(0) &amp;= x^0\\
P[\al] &amp;= \int_0^T r(x(t),\al(t))\,dt + g(x(T))
\end{align}\]</span>
<p>where <span class="math inline">\(\al: [0,\iy)\to A\)</span> is the control, <span class="math inline">\(r:\R^n\times A\to \R\)</span> is the reward and <span class="math inline">\(g:\R^n\to \R\)</span> is the terminal reward. The goal is to find the optimal <span class="math inline">\(\al\)</span>. (We can think of <span class="math inline">\(x\)</span> as a function of <span class="math inline">\(t, \al, x^0\)</span>, <span class="math inline">\(x(t, \al, x^0)\)</span>.)</p>
Example: Economics (investment) - <span class="math inline">\(x\)</span> is output and <span class="math inline">\(\al\)</span> is proportion to reinvest.
<span class="math display">\[\begin{align}
\dot x &amp;= k\al x\\
x(0)&amp;=x^0\\
P(\al)&amp;=\int_0^T (1-\al(t))x(t)\,dt.
\end{align}\]</span>
Example: Try to stop a train with rockets on both sides - Here <span class="math inline">\(T\)</span> is not fixed, but the <span class="math inline">\(\tau\)</span>, the first time that <span class="math inline">\((x,\dot x)=0\)</span>. <span class="math inline">\(\al\in [-1,1]\)</span>, <span class="math inline">\(x=\coltwo qv\)</span>.
<span class="math display">\[\begin{align}
\dot x &amp; = \matt 0100 x + \coltwo 01 \al\\
P(\al) &amp; = -\tau
\end{align}\]</span>
<h2 id="controllability">2 Controllability</h2>
<p>Let <span class="math inline">\(C(t)=\set{x}{\exists \al, x(t, \al, x^0)= x}\)</span> and <span class="math inline">\(C=\bigcup_{t\ge 0} C(t)\)</span>.</p>
Consider linear systems with solution
<span class="math display">\[\begin{align}
\dot x &amp;= Mx + \ub{N\al}{f}\\
X&amp;=e^{tM}\\
x(t) &amp;= X(t) x^0 + X(t) \int_0^t X^{-1}(s) f(s)\,ds.
\end{align}\]</span>
<ul>
<li><span class="math inline">\(C, C(t)\)</span> are symmetric and convex, and <span class="math inline">\(C(t)\)</span> is increasing.
<ul>
<li><em>Proof.</em> If <span class="math inline">\(x^0\in C(t), \wh x^0\in C(\wh t)\)</span> with <span class="math inline">\(\al,\wh \al\)</span>, <span class="math inline">\(t\le\wh t\)</span>, then <span class="math inline">\(\la x^0 + (1-\la)\wh x^0\in C(\wh t)\)</span> with <span class="math inline">\(\la \al \one_{\le t} + (1-\la)\wh \al\)</span>.</li>
</ul></li>
<li>Define the <span class="math inline">\(n\times mn\)</span> <strong>control matrix</strong> <span class="math inline">\(G(M,N) = [N, MN, \ldots, M^{n-1}N]\)</span>. Then <span class="math inline">\(\rank G = n \iff 0\in C^{\circ}\)</span> (interior of <span class="math inline">\(C\)</span>).
<ul>
<li><em>Proof.</em> If <span class="math inline">\(b^TG=0\)</span>, then <span class="math inline">\(b^TM^kN=0\)</span> for all <span class="math inline">\(k\)</span> by Cayley-Hamilton.</li>
<li><span class="math inline">\(b^TX^{-1}=0\)</span> by Taylor expansion.</li>
<li>If <span class="math inline">\(x^0\in C(t)\)</span>, <span class="math inline">\(b^Tx^0=0\)</span>, then <span class="math inline">\(C\perp b\)</span>.</li>
<li>If <span class="math inline">\(0\nin C^0\)</span>, then there is a separating hyperplane, <span class="math inline">\(\forall x^0, b^Tx^0\le 0\)</span>.
<ul>
<li><em>Lemma.</em> If for all <span class="math inline">\(\al\)</span>, <span class="math inline">\(\int_0^T b^T X^{-1}N\al\ge0\)</span> then <span class="math inline">\(b^TX^{-1}N\equiv 0\)</span>.
<ul>
<li><em>Proof.</em> Let <span class="math inline">\(v=b^TX^{-1}N\)</span>. If <span class="math inline">\(v\ne 0\)</span> on <span class="math inline">\(I\)</span>, define <span class="math inline">\(\al = \fc{v}{|v|}\)</span> on <span class="math inline">\(I\)</span>.</li>
</ul></li>
<li>From lemma, <span class="math inline">\(bX^{-1} N = 0\)</span>. Differentiate to get <span class="math inline">\(b^T M^k N=0\)</span>.</li>
</ul></li>
</ul></li>
<li>If <span class="math inline">\(A=[-1,1]^n\)</span>, and <span class="math inline">\(\rank G=n\)</span> and <span class="math inline">\(\Re \la \le 0\)</span> for all eigenvalues <span class="math inline">\(\la\)</span> of <span class="math inline">\(M\)</span>, then <span class="math inline">\(C=\R^n\)</span>.
<ul>
<li>If <span class="math inline">\(C\ne \R^n\)</span>, find a separating hyperplane <span class="math inline">\(b^T x^0\le \mu\)</span>.</li>
<li>We aim to get <span class="math inline">\(b^Tx^0&gt;\mu\)</span> for contradiction.</li>
<li><span class="math inline">\(v=b^TX^{-1}N\nequiv 0\)</span> because the rank of <span class="math inline">\(G\)</span> is <span class="math inline">\(n\)</span>.</li>
<li>Let <span class="math inline">\(\al = -\fc{v}{|v|}\one_{v\ne 0}\)</span>. Then <span class="math inline">\(p\pa{-\ddd t}v = 0\)</span> by CH, so <span class="math inline">\(\ddd t p\pa{-\ddd t}\phi = 0\)</span>. So <span class="math inline">\(\phi(t) = \sum p_i e^{\mu_i t}\not \to 0\)</span> where <span class="math inline">\(\mu_{n+1}=0\)</span>, <span class="math inline">\(\mu_k=-\la_k\)</span>. So <span class="math inline">\(\int_0^\iy|v|=\iy\)</span> and <span class="math inline">\(b^Tx^0\to \iy\)</span>.</li>
</ul></li>
</ul>
<p>(If <span class="math inline">\(A=\R^n\)</span>, then <span class="math inline">\(\rank G=n \iff C=\R^n\)</span>.)</p>
<h3 id="observations">Observations</h3>
<p>Suppose we observe <span class="math inline">\(y=Nx\)</span> where <span class="math inline">\(N\in \R^{m\times n}\)</span>. Think of <span class="math inline">\(m&lt;n\)</span>.</p>
<p>Say the system is observable if <span class="math inline">\(Nx_1\equiv Nx_2\)</span> on <span class="math inline">\([0,t]\)</span> implies <span class="math inline">\(x_1\equiv x_2\)</span>.</p>
<p><strong>Duality</strong>. <span class="math inline">\(\dot x = Mx\)</span>, <span class="math inline">\(y=Nx\)</span> is observable iff <span class="math inline">\(\dot z = M^Tz + N^T \al\)</span>, <span class="math inline">\(\al\in \R^m\)</span> is controllable.</p>
<p><em>Proof</em>.</p>
<ul>
<li>Assume not observable.
<ul>
<li><span class="math inline">\(x=x_1-x_2\)</span>, <span class="math inline">\(\dot x = Mx\)</span>, <span class="math inline">\(Nx=0\)</span>. Then <span class="math inline">\(\rank G&lt;n\)</span>, so not controllable.</li>
</ul></li>
<li>Assume not controllable.
<ul>
<li>Then <span class="math inline">\(\rank G&lt;n\)</span>, take <span class="math inline">\(x\)</span> such that <span class="math inline">\(x^TG=0\)</span>.</li>
</ul></li>
</ul>
<h3 id="bang-bang">Bang-bang</h3>
<p><strong>Theorem</strong>. Any extreme point of the set of admissible controls <span class="math inline">\(\set{\al:\R^n\to [-1,1]^n}{x(t,\al,x^0)=x}\)</span> has, for each <span class="math inline">\(t\ge 0\)</span>, <span class="math inline">\(i\)</span>, <span class="math inline">\(|\al^i|=1\)</span> (is “bang-bang”). In particular, there always exists a bang-bang solution.</p>
<p><em>Proof</em>.</p>
<ul>
<li>The set of admissible controls is convex in <span class="math inline">\(L^{\iy}\)</span> and <span class="math inline">\(w^*\)</span> compact (show sequential compactness using Alaoglu.).</li>
<li>If an extreme point has <span class="math inline">\(|\al^i|&lt;1-\ep\)</span> on <span class="math inline">\(F\)</span>, then write as combination of <span class="math inline">\(\al^*\pm \ep \be e_i \one_F\)</span>.</li>
<li>Extreme points exist by Krein-Milman.</li>
</ul>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>
<entry>
    <title>POMDPs</title>
    <link href="http://holdenlee.github.io/notebook/posts/tcs/machine_learning/reinforcement_learning/POMDP.html" />
    <id>http://holdenlee.github.io/notebook/posts/tcs/machine_learning/reinforcement_learning/POMDP.html</id>
    <published>2016-11-29T00:00:00Z</published>
    <updated>2016-11-29T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>POMDPs</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-11-29 
          , Modified: 2016-11-29 
	</p>
      
       <p>Tags: <a href="/tags/none.html">none</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"> <ul>
 <li><a href="#np-hardness">NP-hardness</a></li>
 </ul> </div>

  <div class="blog-main">
    <p>[ALA16] Open problem - approximate planning of POMDPs in the class of memoryless policies</p>
<p>The relevant matrices/tensors are <span class="math inline">\(f_T(x'|x,a) = T_{xx'a}\)</span>, <span class="math inline">\(f_R(r|x,a) = \Ga_{xar}\)</span>, and <span class="math inline">\(f_O(y|x) = O_{xy}\)</span>. View it two ways.</p>
<ol type="1">
<li>As an extended MDP, with transition matrix <span class="math inline">\(P_{(x,a), (y,b)} = T_{yxa}\Pi_{ay}\)</span>, <span class="math inline">\(\om'\)</span> the stationary vector. (I think it’s <span class="math inline">\(\om' = (I-P^T(PP^T)^{-1}P)e_1\)</span>.) We try to maximize <span class="math display">\[\max_{\Pi\ge 0, \sum_a \pi(a|y)=1} \sum_{x,a} \om_\pi(x) \sum_y O_{xy} \Pi_{ay} \ol r(x,a).\]</span></li>
<li>As a MDP with restricted class of policies - a linear subspace, <span class="math display">\[ \Pi_{ax} = O_{xy} \Pi_{ay}.\]</span></li>
</ol>
<p>We are maximizing over a linear subspace, but the value is not convex in the policy. We can easily get to local min using policy gradient (this is easier than policy gradient because we know all parameters).</p>
<p>Questions:</p>
<ol type="1">
<li>Why is this nonconvex? Since we are maximizing, actually the question is “why is this nonconcave”? Come up with a simple concrete example where this is nonconvex. Answer (this is not full-rank, but you can change it infinitesimally): Have a state machine that rewards you only if you choose LL or RR, not if you switch. Then the optimal strategy is to always play L or always play R, rather than somewhere in the middle. More complicatedly, you can set up something which rewards the player from playing probabilities close to <span class="math inline">\(p_1,\ldots, p_k\)</span>, so there can be multiple local optima.</li>
<li>Simpler question: Suppose there are only 2 actions each step, and there is no view. Find the best strategy. Bellman’s equation gives <span class="math inline">\(Q=R + PQ\coltwo{p}{1-p}\)</span>. This is a linear equation in <span class="math inline">\(2|S|\)</span> variables, so the value is a rational function of degree <span class="math inline">\(\le 2|S|\)</span> in <span class="math inline">\(p\)</span>. I think in general you get rational functions also, but in more variables! Can we reduce from something hard like tensor decomposition to this? The difficulty is writing polynomials as solutions to systems of equations… (The denominator is multilinear if you treat all states as the same… but perhaps you can get a broader class.) Or maybe we can’t just perturb the non-full-rank case, we actually need something far enough from low-rank so that the strategy is not oblivious… (ALA16 don’t restrict to full rank.)</li>
</ol>
<p>See also Bertsekas on combining states.</p>
<p>The projection in the expression seems messy to deal with.</p>
<h2 id="np-hardness">NP-hardness</h2>
<p>Finding the optimal memoryless policy for a POMDP is NP-hard. (Proof: We can reduce from any polynomial optimization problem over the simplex to a POMDP as follows. The observation space is trivial, <span class="math inline">\(\{1\}\)</span>. Then a memoryless policy is just a vector of probabilities for different actions, summing to 1. Note a deterministic POMDP is a finite state machine where the actions correspond to characters read in by the machine. Given a polynomial is degree <span class="math inline">\(n\)</span>, make a POMDP that is stratified in <span class="math inline">\(n\)</span> layers. For each monomial <span class="math inline">\(a_{i_1\ldots i_n} x_{i_1}\cdots x_{i_n}\)</span> create a path in the finite state machine that reads in actions <span class="math inline">\(i_1,\ldots, i_n\)</span>, ends in a reward of <span class="math inline">\(a_{i_1\ldots i_n}\)</span> and then resets. Then the average reward is <span class="math inline">\(1/n\)</span> times the polynomial.)</p>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>
<entry>
    <title>Weekly summary 2016-12-03</title>
    <link href="http://holdenlee.github.io/notebook/posts/summaries/2016-12-03.html" />
    <id>http://holdenlee.github.io/notebook/posts/summaries/2016-12-03.html</id>
    <published>2016-11-28T00:00:00Z</published>
    <updated>2016-11-28T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>Weekly summary 2016-12-03</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-11-28 
          , Modified: 2016-12-03 
	</p>
      
       <p>Tags: <a href="/tags/none.html">none</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"> <ul>
 <li><a href="#hmmmdp-project">HMM/MDP project</a></li>
 <li><a href="#alexanlp-experiments">Alexa/NLP experiments</a></li>
 <li><a href="#other-experiments">Other experiments</a></li>
 <li><a href="#learning">Learning</a></li>
 </ul> </div>

  <div class="blog-main">
    <h2 id="hmmmdp-project">HMM/MDP project</h2>
<ul>
<li>[ALA16] open problem, simple policy optimization - is it intractable? (Tue. started)</li>
<li>[JKAL16] Contextual MDP paper (Tue. started)</li>
<li>Go through policy gradient (Tue)</li>
<li>Theory review
<ul>
<li>Ch. 3, 5 of FA</li>
<li>Ch. 6 Bertsekas</li>
</ul></li>
<li>Experiments
<ul>
<li>Program basic RL</li>
</ul></li>
</ul>
<h2 id="alexanlp-experiments">Alexa/NLP experiments</h2>
<ul>
<li>Get Yingyu’s word2vec, DL code up and running.
<ul>
<li>Try modifying with other modalities (sentiments, etc.)</li>
</ul></li>
<li>Lisa Lee’s thesis</li>
<li>Parsing
<ul>
<li>Stanford parser</li>
<li>Try training NN</li>
<li>SyntaxNet</li>
</ul></li>
<li>Train word vectors with syntax trees.</li>
<li>Read EMNLP papers.</li>
</ul>
<h2 id="other-experiments">Other experiments</h2>
<ul>
<li>Neural net learns dictionaries: run experiments.
<ul>
<li>NNDL experiment.</li>
<li>Where is the cusp?</li>
</ul></li>
</ul>
<h2 id="learning">Learning</h2>
<ul>
<li>EM algorithm</li>
<li>Nonparametric/kernel methods (cf. BCO)</li>
<li>Tensor decomposition and latent variable model</li>
<li>MDP theory (see above)</li>
<li>Summarize papers</li>
</ul>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>
<entry>
    <title>Policy gradient</title>
    <link href="http://holdenlee.github.io/notebook/posts/tcs/machine_learning/reinforcement_learning/policy_gradient.html" />
    <id>http://holdenlee.github.io/notebook/posts/tcs/machine_learning/reinforcement_learning/policy_gradient.html</id>
    <published>2016-11-22T00:00:00Z</published>
    <updated>2016-11-22T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>Policy gradient</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-11-22 
          , Modified: 2016-11-22 
	</p>
      
       <p>Tags: <a href="/tags/reinforcement%20learning.html">reinforcement learning</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"> <ul>
 <li><a href="#setup">Setup</a></li>
 <li><a href="#computation">Computation</a></li>
 <li><a href="#questions-notes">Questions, notes</a></li>
 </ul> </div>

  <div class="blog-main">
    <p>[SASM00] Policy gradient methods for RL with function approximation</p>
<p>A version of policy iteration with arbitrary differentiable function converges to a locally optimal policy.</p>
<p>Problems with the value-function approach</p>
<ul>
<li>finds deterministic policies.</li>
<li>a small change in estimated vaue of action can change the action selected. (obstacles for convergence guarantees)</li>
</ul>
<p><span class="math display">\[\De \te \approx \al \pdd{\rh}{\te}.\]</span></p>
<h2 id="setup">Setup</h2>
<p>The policy is parameterized by <span class="math inline">\(\te\)</span>, and gives probabilities of making action <span class="math inline">\(a\)</span> in state <span class="math inline">\(s\)</span>, <span class="math display">\[
\pi_\te(a|s) = \Pj_\te(a|s).
\]</span> Before, we considered the value at every state. Here, it’s more convenient to consider the value of a fixed start state, which we’ll denote by <span class="math inline">\(\rh\)</span>.</p>
There are 2 ways we can have an expression for <span class="math inline">\(\rh\)</span>.

<p>Consider two settings.</p>
<ol type="1">
<li>Average reward setting. Here we want to maximize <span class="math inline">\(\lim_{T\to \iy} \rc{T}\sumz t{T-1} R_t\)</span>. Then let <span class="math inline">\(d_\te\)</span> be the stationary distribution: <span class="math inline">\(d_\te(s)\)</span> is the probability of being at state <span class="math inline">\(s\)</span> under policy <span class="math inline">\(\pi_\te\)</span>.</li>
<li>Discounted reward setting. Here we want to maximize <span class="math inline">\(\sumz t{\iy} \ga^t R_t\)</span>. Now <span class="math inline">\(d_\te\)</span> has to take into account the discounting, so <span class="math display">\[ d_\te (s) = \sumz t{\iy} \ga^t \Pj (s_t = s).\]</span></li>
</ol>
We also have to change our definition of <span class="math inline">\(Q\)</span> for the average reward setting - otherwise all the <span class="math inline">\(Q\)</span>’s would be the same! In the two cases, define
<span class="math display">\[\begin{align}
Q^{\pi}(s,a) &amp;= \sumz t{\iy} \E[R_t - \rh_\pi | s_0=s,a_0=a, \te]\\
Q^{\pi}(s,a) &amp;= \E\ba{\sumz k{\iy} \ga^{k} R_{t+k} | s_t=s, a_t=a, \pi}.
\end{align}\]</span>
<p>The second is the usual definition of the <span class="math inline">\(Q\)</span>-function. Think of the first as “advantage” of starting at <span class="math inline">\((s,a)\)</span>. It converges because working out with matrices, <span class="math display">\[
\E R_t = \rh_\te + O_{s,a} \pa{\la^t}
\]</span> where <span class="math inline">\(\la\)</span> is the second-largest eigenvalue of the transition matrix (besides 1). So instead of discounting to make <span class="math inline">\(Q\)</span> converge, we subtract the mean to make <span class="math inline">\(Q\)</span> converge. Define <span class="math inline">\(V^\pi(s) = \max_a Q^\pi(s,a)\)</span>.</p>
<p>Then (for continuous spaces replace <span class="math inline">\(\sum\)</span> with <span class="math inline">\(\int\)</span>) <span class="math display">\[\rh_\te = \sum_s d_\te(s) \sum_{a} Q^\te(s,a) \pi_\te(a|s) \]</span> (Whenever something depends on the policy <span class="math inline">\(\pi_\te\)</span>, we write <span class="math inline">\(\te\)</span> as shorthand: <span class="math inline">\(Q^{\te} = Q^{\pi_\te}\)</span>.</p>
<h2 id="computation">Computation</h2>
<p>We need to calculate the derivative. Naively using the product rule, we would need <span class="math inline">\(\nb_\te d_\te(s)\)</span> which we don’t have a way of estimating. But we can derive an expression that doesn’t include this term! To do this we differentiate the Bellman equation for <span class="math inline">\(V\)</span> (which implicitly includes <span class="math inline">\(\rh\)</span>).</p>
<p><strong>Lemma 1</strong>. <span class="math display">\[
\nb_\te \rh_\te = \sum_s d_\te(s) \sum_a \nb_\te \pi(s|a) Q^\te(s,a).
\]</span></p>
<em>Proof</em>. Our strategy is to write the one-step expansion of <span class="math inline">\(Q^\te\)</span> <!-- , and find there's a term that cancels with $\nb_\te \pi_\te(a|s)$.--> Let <span class="math inline">\(R(s,a)\)</span> be the one-step reward of action <span class="math inline">\(a\)</span> in state <span class="math inline">\(s\)</span>. We write the proof for the undiscounted case.
<span class="math display">\[\begin{align}
\nb_\te V^\te (s)
&amp;= \sum_a \pa{
(\nb_\te \pi_\te(a|s)) Q^\te(s,a) 
+
\pi_\te(a|s) (\nb_te Q^\te(s,a))}
&amp;= 
\sum_a (\nb_\te \pi_\te (a|s)) Q^\te(s,a) 
+ \pi(a|s) \nb_\te\pa{\E R(s,a) - \rh_\te + \sum_{s'} \Pj(s'|s,a) V^{\te}(s')}\\
\nb_\te \rh_\te &amp;= \pa{\sum_a \nb_\te \pi_\te (a|s)) Q^\te(s,a) +  + \pi(a|s) \sum_{s'} \nb_\te V^{\te} (s') \Pj(s'|s,a) }- \nb_\te V^{\te}(s)
\end{align}\]</span>
This is unsatisfactory because we can’t estimate <span class="math inline">\(\nb_\te V^{\te}(s')\)</span> for every <span class="math inline">\(s'\)</span>. But there is a combination of these we can estimate, namely the stationary distribution. So multiply by <span class="math inline">\(d_\te(s)\)</span> and sum.
<span class="math display">\[\begin{align}
\nb_\te \rh_\te &amp;= \pa{\sum_{s} d_\te(s) \pa{\sum_a(\nb_\te \pi_\te(a|s)) Q^{\te}(s,a)} + \cancel{d_\te(s) \pa{\sum_a\pi(a|s) \sum_{s'} \nb_\te V^{\te}(s') \Pj(s'|s,a)}} - \cancel{\nb_\te V_\te(s)}}.
\end{align}\]</span>
<p>We have to replace <span class="math inline">\(Q^\te\)</span> by an estimate. This doesn’t correspond to an update rule directly, because we can’t estimate <span class="math inline">\(\nb_\te(s|a)\)</span>.</p>
We estimate of <span class="math inline">\(Q^\te\)</span> by a function approximation, updating by <span class="math inline">\(\nb_w (\wh Q^\te(s,a) - f_w(s,a))^2\)</span> given a sample <span class="math inline">\((s,a)\)</span>. This converges to a local min where (<span class="math inline">\(\wh Q^\te\)</span> is an unbiased estimator)
<span class="math display">\[\begin{align}
\E \nb_w \pa{\wh Q^{\te} (s,a) - f_w(s,a)} &amp;=0\\
\sum_s d_\te(s) \sum_a \pi_\te(s|a) (Q^\te(s,a) - f_w(s,a)) &amp;=0
\end{align}\]</span>
<p>We would like to be able to replace <span class="math inline">\(Q^\te(s,a)\)</span> in Lemma 1 with the approximation <span class="math inline">\(f_w(s,a)\)</span>. In order to do this we need the error to be 0: <span class="math display">\[
\sum_s d^{\pi}(s) \pa{
\sum_a (\nb_\te \pi_\te(s|a)) Q^\te(s,a) - \nb_\te\pi(s|a) f_w(s,a)
}
\]</span> In order for these to match up, we need <span class="math display">\[
\nb_w f_w(s,a) = \fc{\nb_\te \pi(s|a)}{\pi(s|a)} = \nb_\te(\ln \pi(s|a)).
\]</span></p>
<p><strong>Question</strong>: Do people wait until convergence, or do they do alternating minimization in practice? Does alternating minimization converge?</p>
Work out the loglinear case:
<span class="math display">\[\begin{align}
\pi(s|a) &amp;= \fc{e^{\te^T \phi_a(s)}}{\sum_b e^{\te^T\phi_b(s)}}\\
\nb_\te \ln \pi(s|a) &amp;= \phi_a(s) - \fc{\sum_b e^{\te^T\phi_b(s)} \phi_b(s)}{\sum_b e^{\te^T \phi_b(s)}}\\
&amp;= \phi_a(s) - \sum_b \pi(s|b) \phi_b(s).
\end{align}\]</span>
<p>So take <span class="math display">\[
f_w(s,a) = w^T ( \phi_a(s) - \sum_b \pi(s|b) \phi_b(s)).
\]</span></p>
<p>How well does this parametrization work, compared to Q-learning by FA?</p>
<h2 id="questions-notes">Questions, notes</h2>
<ol type="1">
<li>Does the LP formulation give a way to understand the derivative? In terms of slack constraints, etc.</li>
<li>How nonconvex is this? What does the optimization landscape look like? Ex. take 2-action, 3-action case, random transition matrices, some kind of grouping together of states. See <a href="POMDP.html">POMDP</a></li>
<li>Try to prove intractability - see POMDP. The parametrization there is a slice of the product of simplices, rather than a subspace in logspace. But you can relate it to optimizing rational functions this way. The main reason I suspect intractability is that the degree can be as large as number of parameters…</li>
</ol>
Minimizing cross-entropy for loglinear is a convex problem. Minimize perplexity for distribution <span class="math inline">\(\Pj(y|x)\)</span> with distribution <span class="math display">\[
\wh P(y|x) = \fc{e^{\te_y^T\phi(x)}}{\sum_{y'} e^{\te_{y'}^T \phi(x)}}.
\]</span> To show convexity, we need to show log of partition function is convex. Reducing to 1-variable case,
<span class="math display">\[\begin{align}
f &amp;= \ln \sum_i e^{a_i+b_i\te}\\
f_\te &amp; = \E b_i\\
f_{\te\te} &amp;= \E b_i^2 - \pa{\E b_i}^2 \ge 0.
\end{align}\]</span>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>
<entry>
    <title>Weekly summary 2016-11-19</title>
    <link href="http://holdenlee.github.io/notebook/posts/summaries/2016-11-19.html" />
    <id>http://holdenlee.github.io/notebook/posts/summaries/2016-11-19.html</id>
    <published>2016-11-14T00:00:00Z</published>
    <updated>2016-11-14T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>Weekly summary 2016-11-19</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-11-14 
          , Modified: 2016-11-14 
	</p>
      
       <p>Tags: <a href="/tags/none.html">none</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"> <ul>
 <li><a href="#hmmmdp-project">HMM/MDP project</a></li>
 <li><a href="#alexanlp-experiments">Alexa/NLP experiments</a></li>
 <li><a href="#other-experiments">Other experiments</a></li>
 <li><a href="#learning">Learning</a></li>
 </ul> </div>

  <div class="blog-main">
    <h2 id="hmmmdp-project">HMM/MDP project</h2>
<ul>
<li>Lit review
<ul>
<li>[TLF] Monte Carlo HiddenMarkov Models: Learning Non-Parametric Models of Partially Observable Stochastic Processes (Mon.)</li>
</ul></li>
<li>Theory review
<ul>
<li>Ch. 3, 5 of FA</li>
<li>Ch. 6 Bertsekas</li>
</ul></li>
<li>Experiments
<ul>
<li>Program basic RL</li>
</ul></li>
<li>Theory: things to try
<ul>
<li>Nonparametric/kernel methods (cf. BCO)</li>
</ul></li>
</ul>
<h2 id="alexanlp-experiments">Alexa/NLP experiments</h2>
<ul>
<li>Get LSTM up and running.</li>
<li>Get Yingyu’s word2vec, DL code up and running.
<ul>
<li>Try modifying with other modalities (sentiments, etc.)</li>
</ul></li>
<li>Lisa Lee’s thesis</li>
</ul>
<h2 id="other-experiments">Other experiments</h2>
<ul>
<li>Neural net learns dictionaries: run experiments.
<ul>
<li>NNDL experiment.</li>
<li>Where is the cusp?</li>
</ul></li>
</ul>
<h2 id="learning">Learning</h2>
<ul>
<li>Sum of squares: tensor decomposition (Mon.)</li>
<li>EM algorithm</li>
<li>Tensor decomposition and latent variable model</li>
<li>MDP theory (see above)</li>
<li>Summarize papers</li>
</ul>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>
<entry>
    <title>Probabilistic models - Ideas</title>
    <link href="http://holdenlee.github.io/notebook/posts/tcs/machine_learning/probabilistic/ideas.html" />
    <id>http://holdenlee.github.io/notebook/posts/tcs/machine_learning/probabilistic/ideas.html</id>
    <published>2016-11-07T00:00:00Z</published>
    <updated>2016-11-07T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>Probabilistic models - Ideas</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-11-07 
          , Modified: 2016-11-07 
	</p>
      
       <p>Tags: <a href="/tags/none.html">none</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"> <ul>
 <li><a href="#non-generative-framework-for-learning-probabilistic-models">Non-generative framework for learning probabilistic models</a><ul>
 <li><a href="#hmms">HMM’s</a></li>
 <li><a href="#kernel-hmm">Kernel HMM</a></li>
 </ul></li>
 <li><a href="#markov-models-with-exponential-state-space">Markov models with exponential state space</a></li>
 <li><a href="#context-vectors">Context vectors</a></li>
 </ul> </div>

  <div class="blog-main">
    <h2 id="non-generative-framework-for-learning-probabilistic-models">Non-generative framework for learning probabilistic models</h2>
<p>We can adapt Hazan and Ma’s framework [HM16] to learning probabilistic models. Note that given a model, in the limit the number of bits needed to encode a sequence of samples (up to some level of accuracy) is the entropy of that sequence under the model. Thus the natural loss to look at here is the entropy.</p>
<p>We say a distribution <span class="math inline">\(D\)</span> is <span class="math inline">\(\ga\)</span> C-learnable by a hypothesis class <span class="math inline">\(\mathcal H\)</span> of probabilistic models if there is an algorithm, that given <span class="math inline">\(\ep\)</span>, with probability <span class="math inline">\(1-\de\)</span>, outputs a model <span class="math inline">\(m\)</span> such that <span class="math display">\[
\rc{l(\vec x)} \EE_{D} \ln \Pj(\vec x|m) \le \rc{l(\vec x)} \min_{m\in \mathcal H} \EE_{D}\ln \Pj(\vec x|m) + \ep + \ga
\]</span> in time polynomial in the parameters, <span class="math inline">\(\poly\pa{\rc\ep, \ln\prc{\de}, d}\)</span>. Equivalently, the <span class="math inline">\(m\)</span> that is output satisfies <span class="math display">\[
KL(D || m)\le KL(D || \mu) +\ep + \ga.
\]</span> where <span class="math inline">\(\mu\)</span> is the distribution minimizing <span class="math inline">\(KL(D||\mu)\)</span>.</p>
<p>We say the hypothesis class <span class="math inline">\(\mathcal H\)</span> is C-learnable if any distribution <span class="math inline">\(D\)</span> is C-learnable by <span class="math inline">\(\mathcal H\)</span>.</p>
<h3 id="hmms">HMM’s</h3>
<p><strong>Question</strong>: Is the class of HMM’s C-learnable?</p>
<p>The tensor algorithm for HMM’s reduces from the problem of learning from 3 independent views to learning a HMM. Learning from 3 independent views relies on 3-tensor decomposition.</p>
<p>The problem boils down to: <strong>Can we find the closest rank <span class="math inline">\(k\)</span> tensor to a given 3-tensor?</strong> (Consider the regime <span class="math inline">\(k\le n\)</span>, <span class="math inline">\(n\)</span> the dimension.) (If there are <span class="math inline">\(k\)</span> hidden states, the the tensor of probabilities is <span class="math display">\[\pa{\sum_h \Pj(h)\Pj(x_1|h)\Pj(x_2|h) \Pj(x_3|h)}_{x_1x_2x_3} = \sum \Pj(h) (p_1)_h\ot (p_2)_h\ot (p_3)_h.\]</span></p>
<p>Actually, it’s a little harder: the distance here is not the <span class="math inline">\(L^2\)</span> distance but the KL divergence. (We can also consider the <span class="math inline">\(L^2\)</span> distance.) For 2 independent views, this problem becomes: given a matrix <span class="math inline">\(A\)</span> with nonnegative entries summing to 1, find a matrix <span class="math inline">\(B\)</span> with nonnegative entries summing to 1, of rank <span class="math inline">\(k\)</span>, and such that <span class="math inline">\(KL(p_B||p_A)\)</span> is as small as possible.</p>
<h3 id="kernel-hmm">Kernel HMM</h3>
<p>Apply the kernel methods of [SBSG10] Hilbert Space Embeddings of Hidden Markov Models not to the spectral algorithm in [HKZ12] but to the tensor algorithm.</p>
<!--A spectral algorithm for learning Hidden Markov Models, we get a kernel algorithm in an esy -->
<p>This requires some calculation but is straightforward.</p>
<h2 id="markov-models-with-exponential-state-space">Markov models with exponential state space</h2>
<p>Can we learn (hidden) Markov models with exponential state space?</p>
<p>One model is that of a dynamic Bayes net (DBN). Even given pairs <span class="math inline">\((x,y)\)</span> it may be difficult to learn in general (check this…)—if the graph is bounded degree <span class="math inline">\(d\)</span> with bounded edge weights then it could be fixed parameter tractable in <span class="math inline">\(d\)</span>. (To be actually tractable probably the weights have to be <span class="math inline">\(1/d\)</span>.)</p>
<h2 id="context-vectors">Context vectors</h2>
<p>Currently we model documents with the context vector undergoing a random walk (<a href="../nlp/randwalk.html">ALLMR16</a>). I don’t think the different coordinates are so interpretable. (?) A random walk is like a DBM where the connections are <span class="math inline">\(1\to 1', 2\to 2'\)</span>, etc. Can we model the evolution of the context vector as something more complicated but still tractable?</p>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>
<entry>
    <title>Weekly summary 2016-11-12</title>
    <link href="http://holdenlee.github.io/notebook/posts/summaries/2016-11-12.html" />
    <id>http://holdenlee.github.io/notebook/posts/summaries/2016-11-12.html</id>
    <published>2016-11-07T00:00:00Z</published>
    <updated>2016-11-07T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>Weekly summary 2016-11-12</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-11-07 
          , Modified: 2016-11-14 
	</p>
      
       <p>Tags: <a href="/tags/none.html">none</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"> <ul>
 <li><a href="#summary">Summary</a></li>
 </ul> </div>

  <div class="blog-main">
    <h2 id="summary">Summary</h2>
<ul>
<li>Neural net learns dictionaries: run experiments. I found nothing unexpected: closeby initialization does converge. The farther away, the farther away the final <span class="math inline">\(A\)</span> is. (But I think it should be a <code>_/</code> shape—where is the cusp?)
<ul>
<li>Are the different dictionaries related by a linear transformation? It seems not.</li>
</ul></li>
<li>Simons meeting—spanning trees, bandit convex optimization.
<ul>
<li>Can we use kernel methods for MDP’s?</li>
</ul></li>
<li>Meeting with Arora
<ul>
<li>Learn about continuous HMM models.</li>
<li>Improve NLP.</li>
</ul></li>
</ul>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>
<entry>
    <title>Function approximation</title>
    <link href="http://holdenlee.github.io/notebook/posts/tcs/machine_learning/reinforcement_learning/function_approximation.html" />
    <id>http://holdenlee.github.io/notebook/posts/tcs/machine_learning/reinforcement_learning/function_approximation.html</id>
    <published>2016-11-01T00:00:00Z</published>
    <updated>2016-11-01T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>Function approximation</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-11-01 
          , Modified: 2016-11-01 
	</p>
      
       <p>Tags: <a href="/tags/reinforcement%20learning.html">reinforcement learning</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"> <ul>
 <li><a href="#dp-and-rl-in-large-and-continuous-spaces">3 DP and RL in large and continuous spaces</a><ul>
 <li><a href="#nonparametric-appoximation">3.3.2 Nonparametric appoximation</a></li>
 <li><a href="#section">3.3.3</a></li>
 <li><a href="#approximate-value-iteration">3.4 Approximate value iteration</a><ul>
 <li><a href="#convergence">3.4.4 Convergence</a></li>
 <li><a href="#example-approximate-q-iteration-for-a-dc-motor">3.4.5 Example: Approximate Q-iteration for a DC motor</a></li>
 </ul></li>
 <li><a href="#approximate-policy-iteration">3.5 Approximate policy iteration</a></li>
 </ul></li>
 </ul> </div>

  <div class="blog-main">
    <p>See also “Factored MDPs, MDPs with exponential/continuous state space” in <a href="rl_refs.html">refs</a>.</p>
<ul>
<li>[GWTC13]</li>
<li>Reinforcement learning and DP using FA</li>
<li>Bertsekas Ch. 6, ADP</li>
<li><a href="http://site.ebrary.com/lib/princeton/reader.action?docID=10501323">Powell, ADP</a></li>
<li>Sutton, Ch. 8 (v1)</li>
</ul>
<h2 id="dp-and-rl-in-large-and-continuous-spaces">3 DP and RL in large and continuous spaces</h2>
<p><span class="math inline">\(F(\te)(x,u_j) = \phi^T(x,u_j)\te\)</span>, <span class="math inline">\(\phi\)</span> normalized so entries sum to 1.</p>
<h4 id="nonparametric-appoximation">3.3.2 Nonparametric appoximation</h4>
<p>Kernel-based approximator of <span class="math inline">\(Q\)</span> function <span class="math inline">\(\ka: (X\times U)^2\to \R\)</span>.</p>
<p>Form and number of BF’s not defined in advance <span class="math display">\[
\wh Q(x,u) = \sumo{l_s}{n_s} \ka((x,u), (x_{l_s}, u_{l_s}))\te_{l_s}.
\]</span></p>
<p>(I haven’t been exposed to nonparametric methods - what guarantees do nonparametric methods have?) <!-- relies on kernel function that makes sense for the space --></p>
<h4 id="section">3.3.3</h4>
<p>In between: derive small number of good BF’s from data.</p>
<h3 id="approximate-value-iteration">3.4 Approximate value iteration</h3>
<ul>
<li>LSQI: take a bunch of samples, take <span class="math inline">\(Q\)</span> minimizing least squares.</li>
<li>Online: use gradient descent on parameters <span class="math inline">\(\te\)</span>.</li>
</ul>
<p>Approximate Q-learnig requires exploration.</p>
<h4 id="convergence">3.4.4 Convergence</h4>
<p>Proofs for approximate value iteration rely on contraction mapping arguments. Ex. require <span class="math inline">\(F\)</span> and projection <span class="math inline">\(P\)</span> to be nonexpansions.</p>
<p>Suboptimality for convergence point <span class="math inline">\(\te^*\)</span> bounded in terms of min distance between <span class="math inline">\(Q^*\)</span> and fixed point of <span class="math inline">\(F\circ P\)</span>, <span class="math inline">\(\ze_{QI}^*\)</span>.</p>
<p>(Ditto for nonparametric (kernel-based) approximators.)</p>
<h4 id="example-approximate-q-iteration-for-a-dc-motor">3.4.5 Example: Approximate Q-iteration for a DC motor</h4>
<p>Fitted <span class="math inline">\(Q\)</span>-iteration using ensembles of extremely randomized trees.</p>
<h3 id="approximate-policy-iteration">3.5 Approximate policy iteration</h3>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>
<entry>
    <title>Weekly summary 2016-11-05</title>
    <link href="http://holdenlee.github.io/notebook/posts/summaries/2016-11-05.html" />
    <id>http://holdenlee.github.io/notebook/posts/summaries/2016-11-05.html</id>
    <published>2016-10-31T00:00:00Z</published>
    <updated>2016-10-31T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>Weekly summary 2016-11-05</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-10-31 
          , Modified: 2016-10-31 
	</p>
      
       <p>Tags: <a href="/tags/none.html">none</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"> <ul>
 <li><a href="#threads">Threads</a><ul>
 <li><a href="#priority">Priority</a></li>
 <li><a href="#other">Other</a></li>
 </ul></li>
 <li><a href="#other-papers">Other papers</a></li>
 <li><a href="#people-to-talk-to">People to talk to</a></li>
 </ul> </div>

  <div class="blog-main">
    <p><a href="2016-10-29.html">Last week</a>. (See also <a href="2016-10-22.html">wonderings</a>.)</p>
<h2 id="threads">Threads</h2>
<h3 id="priority">Priority</h3>
<ul>
<li>Come up with a class of MDPs on exponential space that is interesting and tractable. <a href="/posts/tcs/machine_learning/reinforcement_learning/continuous.html">Thoughts</a> (Tuesday)
<ul>
<li>Understand provable guarantees on MDP’s first</li>
</ul></li>
<li>PMI - get some results!
<ul>
<li>Mon. - train CIFAR.</li>
<li>Todos
<ul>
<li>Check MNIST model 1. What are sizes of coefficients?</li>
<li>Run experiments on CIFAR.</li>
</ul></li>
</ul></li>
</ul>
<h3 id="other">Other</h3>
<ul>
<li>SoS <a href="/posts/tcs/complexity/sos.html">summary</a> (Monday: wrote up notes.)</li>
<li>DL experiments <a href="/posts/tcs/machine_learning/matrices/DL_generalization.html">DL generalization</a></li>
<li>On hold
<ul>
<li>(*) NN learns DL. Can write up weak result, worth doing?</li>
</ul></li>
<li>Papers (Wednesday: read through)
<ul>
<li>[HM16] on unsupervised learning (finish)</li>
<li>[HMR16] on dynamical system learning</li>
<li>[R16] on convex relaxations for partition function calculation</li>
</ul></li>
<li>Ch. 3-4 of Graphical models book. (Friday) <a href="/posts/tcs/machine_learning/probabilistic/graphical_models.html">Notes</a></li>
<li><a href="/posts/tcs/machine_learning/probabilistic/ideas.html">Thoughts on HMMs, etc.</a> (Friday)</li>
</ul>
<p>Analyze Arora and Ge’s NMF algorithm in the presence of noise. Exactly how much noise can it tolerate?</p>
<h2 id="other-papers">Other papers</h2>
<ul>
<li>TODO Read this paper: [CFP16] Assessing significance in a Markov chain without mixing</li>
</ul>
<h2 id="people-to-talk-to">People to talk to</h2>
<ul>
<li>Yingyu, on PMI</li>
</ul>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>

</feed>
