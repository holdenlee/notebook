<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Research Notebook</title>
    <link href="http://holdenlee.github.io/notebook/atom.xml" rel="self" />
    <link href="http://holdenlee.github.io/notebook" />
    <id>http://holdenlee.github.io/notebook/atom.xml</id>
    <author>
        <name>Holden Lee</name>
        <email>oldheneel@gmail.com</email>
    </author>
    <updated>2016-06-27T00:00:00Z</updated>
    <entry>
    <title>[JSA15] Beating the Perils of Non-Convexity - Guaranteed Training of Neural Networks using Tensor Methods</title>
    <link href="http://holdenlee.github.io/notebook/posts/tcs/machine_learning/neural_nets/JSA15.html" />
    <id>http://holdenlee.github.io/notebook/posts/tcs/machine_learning/neural_nets/JSA15.html</id>
    <published>2016-06-27T00:00:00Z</published>
    <updated>2016-06-27T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>[JSA15] Beating the Perils of Non-Convexity - Guaranteed Training of Neural Networks using Tensor Methods</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-06-27 
          , Modified: 2016-06-27 
	</p>
      
       <p>Tags: <a href="/tags/neural%20net.html">neural net</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"> <ul>
 <li><a href="#notes">Notes</a></li>
 <li><a href="#algorithm">Algorithm</a></li>
 </ul> </div>

  <div class="blog-main">
    <p>Gives the first provable risk bounds for 2-layer neural nets via an efficient algorithm. Assumes that the generative distribution for the inputs <span class="math inline">\(x\)</span>’s is known or estimable (the algorithm uses the 3rd order score function). Algorithm is based on tensor decomposition.</p>
<p>Remarks:</p>
<ul>
<li>The distribution <span class="math inline">\(p(y|x)\)</span> defined by the NN seems funny. <span class="math inline">\(y\in \{0,1\}\)</span> with <span class="math display">\[f(x) = \E[\wt y|x] = \an{\si_2,\si(A_1^T x + b_1)}+b_2.\]</span> But this means that we must have <span class="math inline">\(f(x)\in \{0,1\}\)</span>! Usually this is put through another sigmoid function…</li>
</ul>
<h2 id="notes">Notes</h2>
<p>See [JSA14].</p>
<p><strong>Lemma (Stein’s identity)</strong>: Under some regularity conditions, <span class="math display">\[\EE_{x\sim p} [G(x) \ot \nb_x\ln p(x)] = \EE_{x\sim p} \nb_x G(x).\]</span> (For example, for <span class="math inline">\(p(x)\)</span> Gaussian, <span class="math inline">\(\nb_x \ln p(x) = -x\)</span>.)</p>
<p><em>Proof</em>. By IbP, <span class="math display">\[\int G(x)_i \pdd{x_j} \ln p(x) p(x) \dx = \int G(x)_i \pdd{x_j}p(x) = -\int \pdd{x_j} G(x)_i p(x)\dx.\]</span></p>
<h2 id="algorithm">Algorithm</h2>
<ol type="1">
<li>Tensor decomposition</li>
<li>Fourier algorithm</li>
<li>Ridge (linear) regression</li>
</ol>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>
<entry>
    <title>[BGKP16] Non-negative matrix factorization under heavy noise</title>
    <link href="http://holdenlee.github.io/notebook/posts/tcs/machine_learning/matrices/BGKP16.html" />
    <id>http://holdenlee.github.io/notebook/posts/tcs/machine_learning/matrices/BGKP16.html</id>
    <published>2016-06-27T00:00:00Z</published>
    <updated>2016-06-27T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>[BGKP16] Non-negative matrix factorization under heavy noise</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-06-27 
          , Modified: 2016-06-27 
	</p>
      
       <p>Tags: <a href="/tags/NMF.html">NMF</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"> <ul>
 <li><a href="#summary">Summary</a></li>
 <li><a href="#assumptions">Assumptions</a></li>
 <li><a href="#algorithm">Algorithm</a></li>
 </ul> </div>

  <div class="blog-main">
    <h2 id="summary">Summary</h2>
<p>A provable algorithm for NMF <span class="math inline">\(A=BC\)</span> without assuming that the noise of every column of <span class="math inline">\(A\)</span> has small noise.</p>
<p>Under <strong>heavy noise</strong> <span class="math display">\[\forall T\subeq [n], |T|\ge \ep n\implies \rc{|T|}\ve{\sum_{j\in T}N_{\bullet,j}}_1\le \ep\]</span> and in the dominant NMF model (dominant features, dominant basis vectors, nearly pure records), the TSVDNMF algorithm finds <span class="math display">\[\ve{B_{\bullet,l}-\wt B_{\bullet, l}}_1\le \ep_0.\]</span></p>
<p>Under dominant NMF assumptions D1, D3, <span class="math inline">\(B\)</span> is identifiable.</p>
<p>Remarks:</p>
<ul>
<li>Dominant features is a relaxation of anchor words.</li>
<li>[AGKM12] (the original algorithm for NMF) requires separability, and does poorly under noise (because under noise the vertices of the simplex may no longer be the vertices of the simplex). Under error <span class="math inline">\(\ve{M-AW}_F^2\le \ep \ve{M}_F^2\)</span>, the algorithm takes time <span class="math inline">\(\exp\pf{r^2}{\ep^2}\)</span>.</li>
<li>Almost pure documents is an assumption not in AGKM12.</li>
<li>It only achieves constant error. (Can we do better than this?)</li>
<li>Heavy noise subsumes many noise models. Note that heavy noise is a bound on <span class="math inline">\(\ve{\sum_{j\in T}N_{\bullet, j}}_1\)</span>, not <span class="math inline">\(\sum_{j\in T}\ve{N_{\bullet, j}}_1\)</span>.</li>
</ul>
<h2 id="assumptions">Assumptions</h2>
<ul>
<li>Heavy noise was defined above. If the covariance of noise in each column is large enough, <span class="math inline">\(\ve{\Si_j}_2=O\pf{\sqrt d}{\ep^2}\)</span>, then whp the heavy noise assumption holds.<a href="#fn1" class="footnoteRef" id="fnref1"><sup>1</sup></a>
<ul>
<li>For example, if it is the sum of <span class="math inline">\(w\)</span> random vectors each with covariance matrix <span class="math inline">\(O(1)\)</span> in norm, then we need <span class="math inline">\(w=\Om\pf{d}{\ep^4}\)</span>. Ex. multinomial noise.<a href="#fn2" class="footnoteRef" id="fnref2"><sup>2</sup></a></li>
</ul></li>
</ul>
<ul>
<li>Dominant NMF: See picture. Left: Dominant features (D1). (Note: sets have to be disjoint, not necessarily a partition.) Right: Dominant basis vectors (D2) and nearly pure records (D3).</li>
</ul>
<p><img src="/images/bgkp16-dnmf.png" width="640"></p>
<h2 id="algorithm">Algorithm</h2>
<ol type="1">
<li>Apply thresholding to get <span class="math inline">\(D\)</span>.
<ul>
<li>Initialize <span class="math inline">\(R=[d]\)</span>.</li>
<li>For each row <span class="math inline">\(i\)</span>, calculate a cutoff <span class="math inline">\(\ze_i\)</span>. Set <span class="math inline">\(D_{ij}=(A_{ij}\ge \ze_i) \sqrt{\ze_i}\)</span>.</li>
<li>Sort rows in ascending order and prune rows as follows. (Why? We want to prune the non-catchwords. They may be associated with significantly more documents than the catchwords.) <img src="/images/bgkp16-alg1.png" width="640"></li>
</ul></li>
<li><p>Take rank-<span class="math inline">\(k\)</span> SVD <span class="math inline">\(D^{(k)}\)</span> of <span class="math inline">\(D\)</span>. (We hope that this is close to a block matrix with nonzeros in <span class="math inline">\(S_l\times T_l\)</span>.)</p>
<img src="/images/bgkp16-alg2.png" width="640"></li>
<li>Identify dominant basis vectors.
<ul>
<li><span class="math inline">\(k\)</span>-means clustering of columns of <span class="math inline">\(D^{(k)}\)</span>.</li>
<li>Apply Lloyd’s algorithm to <span class="math inline">\(D\)</span> with this initialization.</li>
<li>Let <span class="math inline">\((R_i)\)</span> be the <span class="math inline">\(k\)</span>-partition of <span class="math inline">\([n]\)</span>.</li>
</ul></li>
<li>Identify dominant features <span class="math inline">\(J_l\)</span> for each basis vector by: for each <span class="math inline">\(l\)</span>, take the features <span class="math inline">\(i\)</span> (words) with largest <span class="math inline">\(A_{il}\)</span>.</li>
<li><p>Find the basis vectors by averaging the “purest” documents in each <span class="math inline">\(J_l\)</span>. <img src="/images/bgkp16-alg3.png" width="640"></p></li>
</ol>
<!-- Suppose $\ve{M-AW}_F^2\le \ep \ve{M}_F^2$. Devise a better algorithm for separable approximate NMF. -->
<section class="footnotes">
<hr />
<ol>
<li id="fn1"><p>The paper isn’t clear on the <span class="math inline">\(\ep\)</span> dependence… see supplement. In any case this is true in the case that noise is a sum of many <span class="math inline">\(O(1)\)</span> noises.<a href="#fnref1">↩</a></p></li>
<li id="fn2"><p>The covariance matrix is <span class="math inline">\((-1_{i\ne j} p_ip_j)_{i,j}\)</span>. Max eigenvalue is at most <span class="math inline">\(\max p_i(1-p_i)\)</span> in absolute value.<a href="#fnref2">↩</a></p></li>
</ol>
</section>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>
<entry>
    <title>Relevant coordinates: Low-rank</title>
    <link href="http://holdenlee.github.io/notebook/posts/tcs/machine_learning/matrices/relevant_coordinates_svd.html" />
    <id>http://holdenlee.github.io/notebook/posts/tcs/machine_learning/matrices/relevant_coordinates_svd.html</id>
    <published>2016-06-07T00:00:00Z</published>
    <updated>2016-06-07T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>Relevant coordinates: Low-rank</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-06-07 
          , Modified: 2016-06-07 
	</p>
      
       <p>Tags: <a href="/tags/linear%20algebra%2B%2B.html">linear algebra++</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"> <ul>
 <li><a href="#low-rank-submatrix">Low-rank submatrix</a><ul>
 <li><a href="#assumptions">Assumptions</a></li>
 <li><a href="#algorithm">Algorithm</a></li>
 <li><a href="#proof">Proof</a></li>
 <li><a href="#extensions">Extensions</a></li>
 </ul></li>
 </ul> </div>

  <div class="blog-main">
    <p>See also <a href="relevant_coordinates.html">Relevant coordinates</a>.</p>
<h2 id="low-rank-submatrix">Low-rank submatrix</h2>
<p>Suppose <span class="math inline">\(I\subeq [m]\)</span> is a subset of indices. Draw each column of <span class="math inline">\(A\)</span> as follows. <span class="math inline">\(v_I\)</span> is drawn from some distribution close to being supported on a <span class="math inline">\(k\)</span>-dimensional subspace. (For example, first draw <span class="math inline">\(w\in \R^I\)</span> from a distribution supported on a <span class="math inline">\(k\)</span>-dimensional subspace. Now let <span class="math inline">\(v_I=w+\ep\)</span> where <span class="math inline">\(\ep\)</span> is error, independent on different indices. We can relax this in various ways.) For each <span class="math inline">\(i\nin I\)</span>, suppose there is a distribution <span class="math inline">\(D_i\)</span>. Draw <span class="math inline">\(v_i\)</span> from <span class="math inline">\(D_i\)</span> (independently).</p>
<!-- Let $B_{I\times [n]}$ be a rank-$k$ matrix, and let $A_{I\times [n]}=B_{I\times[n]}+E$ where $E$ is noise. For $i\nin I$, let $A_{ij},1\le j\le m$ be independent draws from some distribution, and suppose that $A_{ij}$ for $i\nin I$ are independent. Recover $I$. -->
<h3 id="assumptions">Assumptions</h3>
<ul>
<li>Suppose for simplicity that for each <span class="math inline">\(i\)</span>, <span class="math inline">\(\E v_i=0\)</span>, <span class="math inline">\(\E v_i^2=\Var(v_i)=1\)</span>. We can always normalize so this is the case (paying a little bit error for estimation for <span class="math inline">\(\E v_i\)</span>, <span class="math inline">\(\Var(v_i)\)</span>).</li>
<li>Suppose the distribution on <span class="math inline">\(\R^I\)</span> satisfies the following. For every <span class="math inline">\(i\in I\)</span>, there exists <span class="math inline">\(j\in I, j\ne i\)</span> such that <span class="math inline">\(\E |v_iv_j|\ge \ep\)</span> (for example, <span class="math inline">\(\ep=\rc k\)</span>). (Is this a reasonable assumption? Can we replace it by something more standard?) (This is basically saying that you can’t delete a coordinate and make the distribution on <span class="math inline">\(\R^{I\bs \{i\}}\)</span> almost <span class="math inline">\((k-1)\)</span>-dimensional.)
<ul>
<li><p>Actually, we don’t need this, because:</p>
<p>Lemma: if <span class="math inline">\(B_{ii}=1\)</span>, <span class="math inline">\(B\)</span> is symmetric, has entries in <span class="math inline">\([-1,1]\)</span>, and <span class="math inline">\(B_i\)</span> is a linear combination of <span class="math inline">\(k\)</span> other rows, then there is some <span class="math inline">\(j\ne i\)</span> such that <span class="math inline">\(|B_{ij}|\ge \rc k\)</span>.</p>
<p>Proof. Suppose the <span class="math inline">\(k\)</span> rows are <span class="math inline">\([1,k]\)</span>, and the <span class="math inline">\((k+1)\)</span>th row is a linear combination of these with coefficients <span class="math inline">\(w\)</span>, i.e., letting <span class="math inline">\(C=B_{[1,n]\times [1,n]}\)</span>, <span class="math inline">\(w^TC = [B_{k+1,1},\ldots, B_{k+1,k}]\)</span>. Looking at this linear combination on the <span class="math inline">\(k+1\)</span>th column, <span class="math inline">\(w^T[B_{k+1,1},\ldots, B_{k+1,k}]=1\)</span>. Putting these together, we get <span class="math inline">\(w^TCw=1\)</span>. Because the entries of <span class="math inline">\(C\)</span> are at most 1 in absolute value, this means <span class="math display">\[(|w_1|+\cdots +|w_{k}|)^2\ge 1\implies \exists i, |w_i|\ge \rc k.\]</span></p>
Apply this to the covariance matrix.</li>
</ul></li>
<li>Suppose <span class="math inline">\(\ep\)</span>, the noise, is such that each entry is in <span class="math inline">\([-C,C]\)</span>, zero-centered, and independent.</li>
</ul>
<h3 id="algorithm">Algorithm</h3>
<p>Idea: on average, there is greater correlation between 2 random vectors in a <span class="math inline">\(k\)</span>-dimensional subspace than 2 random vectors in <span class="math inline">\(n\)</span> dimensions.</p>
<ul>
<li>Take <span class="math inline">\(n=\Om(\prc{\ep^2}(\ln m))\)</span> samples. Let them be the columns of <span class="math inline">\(A\)</span>.</li>
<li>Calculate <span class="math inline">\(\rc n AA^T\)</span> (as a guess for the covariance matrix for <span class="math inline">\(v\)</span>).</li>
<li>Declare <span class="math inline">\(i\in I\)</span> iff there is <span class="math inline">\(j\ne i\)</span> such that <span class="math inline">\((\rc{n}AA^T)_{ij}&gt;\fc{\ep}2\)</span>. <!-- * In a graph, connect up $i,j\in[n]$ by an edge iff $|A_{ij}|>\fc{\ep}{2}$.
* W.h.p., all non-isolated vertices are in a connected component. This is $I$. (I.e., declare $i\in I$ iff there is $j\ne i$ such that $(\rc{n}AA^T)_{ij}>\fc{\ep}2$.)--></li>
</ul>
<h3 id="proof">Proof</h3>
<ul>
<li>Let <span class="math inline">\(\wt \E\)</span> be the empirical average, i.e., <span class="math inline">\(\wt \E v_iv_j = \rc n(AA^T)_{ij}\)</span>. We have <span class="math inline">\(|v_iv_j|\le 1\)</span>, so by Chernoff, <span class="math display">\[\Pj(\ab{\wt \E v_iv_j - \E v_iv_j} \ge t) \le 2e^{-nt^2}\]</span> for <span class="math inline">\(i,j\nin I\)</span>. We get a similar bound if <span class="math inline">\(i\in I\)</span> or <span class="math inline">\(j\in I\)</span>, where the randomness is over the noise in <span class="math inline">\(\ep\)</span>. Union-bounding, <span class="math display">\[\Pj(\text{for some $i\ne j$, }\ab{\wt \E v_iv_j - \E v_iv_j} \ge \fc{\ep}{2})\le m^2 e^{-cn\ep^2}.\]</span> Take <span class="math inline">\(n=\Om(\prc{\ep^2}\ln m)\)</span> to get this to be <span class="math inline">\(o(1)\)</span>.</li>
<li>When either <span class="math inline">\(i\nin I\)</span> or <span class="math inline">\(j\nin I\)</span>, we have <span class="math inline">\(\E v_iv_j=0\)</span> so the above event makes <span class="math inline">\(|\wt\E v_iv_j|&lt;\fc{\ep}{2}\)</span>; when <span class="math inline">\(i\in I\)</span>, there is <span class="math inline">\(j\in I\)</span> such that <span class="math inline">\(\E |v_iv_j|&gt;\fc{\ep}{2}\)</span> by assumption so the above event makes <span class="math inline">\(|\wt \E v_iv_j|&gt;\fc{\ep}{2}\)</span>.</li>
</ul>
<h3 id="extensions">Extensions</h3>
<ul>
<li>It’s not really necessary for <span class="math inline">\(v_I\)</span> to be independent. It’s enough that <span class="math inline">\(A_{I\times [n]} = B_{I\times [n]}+E\)</span> where <span class="math inline">\(B_{I\times [n]}\)</span> is a rank <span class="math inline">\(k\)</span>-matrix such that for every <span class="math inline">\(i\in I\)</span>, there is <span class="math inline">\(j\in I\)</span> such that <span class="math inline">\(\an{B_i,B_j} &gt;\ep \ve{B_i}\ve{B_j}\)</span>, and <span class="math inline">\(E\)</span> is random-enough error.</li>
<li>Can we get a result using fewer generative assumptions?
<ul>
<li>Connect <span class="math inline">\(i,j\)</span> if <span class="math inline">\(|\wt \E v_iv_j|&gt;\fc{\ep}{2}\)</span>. We probably reduce to a graph problem, where we want to find a subset where the graph is more dense.</li>
<li>How much can we relax independence? Esp. independence of coordinates <span class="math inline">\(i\nin I\)</span>.</li>
<li>Is worst-case hard (cf. max clique, planted clique)? “Find the subset of size <span class="math inline">\(cn\)</span> that is <span class="math inline">\(\ep\)</span>-close to a rank <span class="math inline">\(k\)</span> matrix.” What about a gap-problem, i.e., there’s a guarantee that there is no subset of size <span class="math inline">\(c'n\)</span> that is <span class="math inline">\(\ep'\)</span> close to rank <span class="math inline">\(c''k\)</span>?</li>
</ul></li>
</ul>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>
<entry>
    <title>Relevant coordinates</title>
    <link href="http://holdenlee.github.io/notebook/posts/tcs/machine_learning/matrices/relevant_coordinates.html" />
    <id>http://holdenlee.github.io/notebook/posts/tcs/machine_learning/matrices/relevant_coordinates.html</id>
    <published>2016-06-02T00:00:00Z</published>
    <updated>2016-06-02T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>Relevant coordinates</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-06-02 
          , Modified: 2016-06-02 
	</p>
      
       <p>Tags: <a href="/tags/linear%20algebra%2B%2B.html">linear algebra++</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"> <ul>
 <li><a href="#problem">Problem</a><ul>
 <li><a href="#clustering">Clustering</a></li>
 <li><a href="#svd">SVD</a></li>
 </ul></li>
 <li><a href="#approaches">Approaches</a><ul>
 <li><a href="#l1-vs.l2-norm">L1 vs. L2 norm</a></li>
 <li><a href="#community-detectionsdp">Community detection/SDP</a></li>
 </ul></li>
 <li><a href="#baby-problem-recovering-clusters">Baby problem: Recovering clusters</a><ul>
 <li><a href="#try-1-svd">Try 1: SVD</a></li>
 <li><a href="#try-2-sdp">Try 2: SDP</a></li>
 <li><a href="#more-than-2-groups">More than 2 groups</a></li>
 <li><a href="#clustering-1">Clustering</a></li>
 </ul></li>
 <li><a href="#svd-1">SVD</a></li>
 </ul> </div>

  <div class="blog-main">
    <h2 id="problem">Problem</h2>
<p>General problem: Often, given high dimensional data in <span class="math inline">\(\R^n\)</span>, only a subset <span class="math inline">\(S\sub [n]\)</span> of coordinates are “relevant”. Identify them.</p>
<p>Here are possible formalizations of the problem.</p>
<h3 id="clustering">Clustering</h3>
Let <span class="math inline">\(|S|=c_1m\)</span> be a random subset of <span class="math inline">\([m]\)</span>. Let <span class="math inline">\(k\)</span> be fixed. Let <span class="math inline">\(((x^{(i)},\si^{(i)2})\in \R^{S})_{i=1}^k\)</span> be <span class="math inline">\(k\)</span> centers and variances. (Assume some reasonable separation.) Each data point comes from some cluster <span class="math inline">\(i\in [k]\)</span> (ex. uniformly at random). If <span class="math inline">\(x\)</span> comes from cluster <span class="math inline">\(i\)</span>, then generate <span class="math inline">\(x\)</span> by
\begin{align}
x_S &amp;\sim N(x^{(i)}, \si^{(i)2})\\
x_j &amp;\sim N(0,1),&amp;j&amp;\nin S.
\end{align}
<p>The goal is to find <span class="math inline">\(S\)</span>. (Then we can recover the centers by standard clustering algorithms.)</p>
<p>Note: There may be a cheap way to do this by identifying which coordinates are <span class="math inline">\(\sim N(0,1)\)</span>. We want something more generalizable. Ex. assume <span class="math inline">\(x_j\sim N(y_j, \tau_j^2)\)</span>. Even better, assume that the <span class="math inline">\(x_j\)</span> are independent but their distribution is arbitrary.</p>
<h3 id="svd">SVD</h3>
<p>Let <span class="math inline">\(A\)</span> be a matrix such that taking the rows with indices in <span class="math inline">\(S\)</span> (<span class="math inline">\(|S|=c_1m\)</span> as above), and suppose that <span class="math inline">\(A\)</span> is <span class="math inline">\(\ep\)</span>-close<a href="#fn1" class="footnoteRef" id="fnref1"><sup>1</sup></a> in <span class="math inline">\(L^2\)</span> to a rank <span class="math inline">\(k\)</span> matrix, and the rest of the entries are generated as <span class="math inline">\(N(0,1)\)</span>. Identify <span class="math inline">\(S\)</span>.</p>
<p>A probabilistic version: <span class="math inline">\(A_{S,i}\)</span> is <span class="math inline">\(N(0, \Si)\)</span> where <span class="math inline">\(\Si\)</span> is close to rank <span class="math inline">\(k\)</span>.</p>
<h2 id="approaches">Approaches</h2>
<h3 id="l1-vs.l2-norm">L1 vs. L2 norm</h3>
<p>Look at the <span class="math inline">\(L^1\)</span> norm and variance (<span class="math inline">\(L^2\)</span> norm) of each row.</p>
<ul>
<li>For the noise rows, we have (whp)
\begin{align}
A=\EE_{j=1}^n |A_{ij}| &amp; =2\iiy x e^{-\fc{x^2}2}\rc{\sqrt{2\pi}}\dx\\
B=\EE_{j=1}^n |A_{ij}|^2 - (\EE_{j=1}^n |A_{ij}|)^2 &amp;=1,
\end{align}
and the ratio <span class="math inline">\(\fc{\sqrt B}A\)</span> between these is concentrated at some constant (whp).</li>
<li><pre><code>For the non-noise rows,</code></pre>
\begin{align}
A=\EE_{j=1}^n |A_{ij}| &amp; &gt; \sfc{2}{\pi}\sum|\si_{k_j}|\\
B=\EE_{j=1}^n |A_{ij}|^2 - (\EE_{j=1}^n |A_{ij}|)^2 &amp;=\sum_i \si_i^2,
\end{align}
and <span class="math inline">\(\fc{\sqrt B}{A}&gt;\sfc{2}{\pi}\)</span>.</li>
</ul>
<p>But this is heavily dependent on the exact distribution of noise! We want something more generalizable.</p>
<h3 id="community-detectionsdp">Community detection/SDP</h3>
<p>Sometimes we can recover even if the noise seems to be larger than the signal, because the noise is uncorrelated. Ex. a random <span class="math inline">\(n\times n\)</span> matrix with <span class="math inline">\(N(0,1)\)</span> entries has eigenvalues on the order of <span class="math inline">\(O(\sqrt n)\)</span>.<a href="#fn2" class="footnoteRef" id="fnref2"><sup>2</sup></a> <!-- check this--></p>
<p>Reference: Synchronization problem, Amit Singer.</p>
<h2 id="baby-problem-recovering-clusters">Baby problem: Recovering clusters</h2>
<p>Problem: Let <span class="math inline">\(x\in \{\pm 1\}^n\)</span>. Given <span class="math inline">\(xx^T + E\)</span> where each entry of <span class="math inline">\(E\)</span> is <span class="math inline">\(N(0,\si^2)\)</span>, recover <span class="math inline">\(x\)</span> (whp). What level of noise <span class="math inline">\(\si\)</span> can we tolerate?</p>
<p>(We want to recover all of <span class="math inline">\(x\)</span>, rather than just something correlated with <span class="math inline">\(x\)</span>.)</p>
<h3 id="try-1-svd">Try 1: SVD</h3>
<p>The largest eigenvector of <span class="math inline">\(A=xx^T\)</span> is <span class="math inline">\(v_1(A) = x\)</span>. By Wedin’s Theorem, <span class="math display">\[ \sin\angle(v_1,v_1') \le \fc{\ve{E}_2}{|\la_1(A) - \la_2(A)|} = \fc{\ve{E}_2}{n} \stackrel?{\ll} \rc{\sqrt n}, \]</span> since the closest vector <span class="math inline">\(w\)</span> to <span class="math inline">\(v_1\)</span> is at an angle <span class="math inline">\(\te\)</span> away where <span class="math inline">\(\cos \te = \fc{n-2}n\)</span>, <span class="math inline">\(\sin \te \sim \rc{\sqrt n}\)</span>. So we need <span class="math inline">\(\ve{E}_2=\wt o(\sqrt n)\)</span><a href="#fn3" class="footnoteRef" id="fnref3"><sup>3</sup></a>.</p>
<p>To get <span class="math inline">\(\ve{E}_2=\wt o(\sqrt n)\)</span> we need <span class="math inline">\(\si=\wt o(1)\)</span>. Using this method we can only tolerate a level of noise <span class="math inline">\(\ll 1\)</span>.</p>
<h3 id="try-2-sdp">Try 2: SDP</h3>
<p>We want <span class="math inline">\(\min_{x\in \{\pm 1\}^n}\ve{xx^T-A}_F^2\)</span>. (Minimize the sum of squares because this is <span class="math inline">\(\propto\)</span> the log-likelihood.)</p>
<p>Relax this: <span class="math display">\[
\amin_{x\in \{\pm 1\}^n}\ve{xx^T-A}_F^2
=\amax_{x\in \{\pm 1\}^n}x_iA_{ij}x_j
=\amax_{x\in \{\pm 1\}^n} \Tr(xx^T)
=\amax_{B\succeq 0 , B_{ii}=1} \Tr(AB)
\]</span></p>
<p>WLOG the optimal solution is <span class="math inline">\(\one\)</span><a href="#fn4" class="footnoteRef" id="fnref4"><sup>4</sup></a>. By SDP duality, <span class="math inline">\(\one\one^T\)</span> is the unique best solution if there exists <span class="math inline">\(Q\succeq 0\)</span>, <span class="math inline">\(\Tr(\one\one^T(Q-W))=0\)</span> where <span class="math inline">\(W=A+E\)</span> is observed.</p>
<p>Let’s consider when <span class="math inline">\(E\)</span> is symmetric.<a href="#fn5" class="footnoteRef" id="fnref5"><sup>5</sup></a> We choose <span class="math inline">\(Q=\diag((\sum_{j}A_{ij})_i)\)</span>. Then <span class="math inline">\(M:=Q-W = \mattn{A_{12}+\cdots +A_{1n}}{-A_{12}}{\cdots}{-A_{21}}{A_{21}+A_{23}+\cdots}{\cdots}{\vdots}{\vdots}{\ddots}\)</span>.</p>
<p>We can think of this as a sum of random matrices <span class="math inline">\(\matt{1+\ep}{-(1+\ep)}{-(1+\ep)}{1+\ep}\)</span> in the submatrix at indices <span class="math inline">\(\{i,j\}\times \{i,j\}\)</span>. The average is <span class="math inline">\(\mattn{(n-1)}{-1}{\cdots}{-1}{n-1}{\cdots}{\ldots}{\ldots}{\ddots}\)</span> with eigenvalues <span class="math inline">\(n,\ldots, n,0\)</span>.</p>
<p>There is concentration up to <span class="math inline">\(\sqrt{n\ln n}\si\)</span>. We just need this to be <span class="math inline">\(&lt;n\)</span> in order to make the second smallest eigenvalue of <span class="math inline">\(M\)</span> be <span class="math inline">\(&gt;0\)</span>. (The smallest eigenvalue is 0.)</p>
<p>Thus we can tolerate noise up to <span class="math inline">\(\si = o\pa{\sfc{n}{\ln n}}\)</span>, much better!</p>
<p><strong>Next step: try to generalize this!</strong></p>
<h3 id="more-than-2-groups">More than 2 groups</h3>
<p>We want to recover the clustering from <span class="math inline">\(\mattn JOOOJOOOJ\)</span> plus noise.</p>
<p>Let <span class="math inline">\(x\in\R^{3n}\)</span> be the (proposed) clustering, where we think of <span class="math inline">\(x\in (\R^3)^n\)</span> and <span class="math inline">\(x_i=e_j\)</span> if <span class="math inline">\(i\)</span> is in the <span class="math inline">\(j\)</span>th cluster.</p>
<p>We want <span class="math inline">\(\min\sum_{i,j} (x_{i1}x_{j1}+x_{i2}x_{j2}+x_{i3}x_{j3} - a_{ij})^2\)</span> over valid <span class="math inline">\(x\)</span>’s. For valid <span class="math inline">\(x\)</span>’s, the quadratic term is 0 or 1, so we want <span class="math display">\[\amax_{x_{i1}^2+x_{i2}^2+x_{i3}^2=1, x_{i1}+x_{i2}+x_{i3}=1} \sum (a_{ij}-1)(x_{i1}x_{j1}+x_{i2}x_{j2}+x_{i3}x_{j3}).\]</span> We can write the expression in matrix form as <span class="math inline">\(\an{B,xx^T}\)</span> where <span class="math inline">\(B=(a_{ij}I)_{i,j}\)</span> (block matrix). For a SDP relaxation, replace <span class="math inline">\(xx^T\)</span> with <span class="math inline">\(M\)</span>, <span class="math inline">\(M\succeq 0\)</span>.</p>
<p>How does this relaxation do?</p>
<h3 id="clustering-1">Clustering</h3>
<p>In clustering we’re given <span class="math inline">\(v_1,\ldots, v_n\)</span> each of which is either <span class="math inline">\(v\)</span> or <span class="math inline">\(w\)</span> plus noise. We can find <span class="math inline">\(V^TV\)</span> and work off that matrix.</p>
<p>Look up literature on clustering and learning mixtures of Gaussians.</p>
<h2 id="svd-1">SVD</h2>
<p>See <a href="relevant_coordinates_svd.html">Relevant coordinates: low-rank matrix</a>.</p>
<section class="footnotes">
<hr />
<ol>
<li id="fn1"><p>What <span class="math inline">\(\ep\)</span>?<a href="#fnref1">↩</a></p></li>
<li id="fn2"><p><span class="math inline">\(\Pj(\la_{\max} \ge t) \le 2ne^{-\fc{t^2}{2\si^2}}\)</span>. Here <span class="math inline">\(\si^2 = \ve{\sum E_{ij}^2}=\sqrt n\)</span>, get concentration to <span class="math inline">\(O(\sqrt n\ln n)\)</span>.<a href="#fnref2">↩</a></p></li>
<li id="fn3"><p>Write <span class="math inline">\(\wt o(f(n))\)</span> to mean <span class="math inline">\(o\pf{f(n)}{\poly\log(n)}\)</span>.<a href="#fnref3">↩</a></p></li>
<li id="fn4"><p>Why WLOG?<a href="#fnref4">↩</a></p></li>
<li id="fn5"><p>We can reduce to this case, I think.<a href="#fnref5">↩</a></p></li>
</ol>
</section>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>
<entry>
    <title>Inference for topic models: Code</title>
    <link href="http://holdenlee.github.io/notebook/posts/tcs/machine_learning/matrices/topic_code.html" />
    <id>http://holdenlee.github.io/notebook/posts/tcs/machine_learning/matrices/topic_code.html</id>
    <published>2016-05-18T00:00:00Z</published>
    <updated>2016-05-18T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>Inference for topic models: Code</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-05-18 
          , Modified: 2016-05-18 
	</p>
      
       <p>Tags: <a href="/tags/topic%20models.html">topic models</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"></div>

  <div class="blog-main">
    <ul>
<li><code>gen_topic_vector</code>: Generate row vectors of size <span class="math inline">\(K\)</span> using Dirichlet (or Gaussian) <span class="math inline">\((\al,\ldots, \al)\)</span>.</li>
<li><code>gen_doc</code>: Generate topic vector, multiply by A</li>
<li><code>interleave</code></li>
<li><code>singlen1</code>: <span class="math inline">\(i\)</span>th standard basis vector</li>
<li><code>process_row_delta</code>: ?</li>
<li><code>process_row_C</code>: ?</li>
<li><code>new_compute_B</code>:</li>
<li><code>threshold</code>:</li>
<li><code>log_likelihood</code>:</li>
<li><code>fast_grad_log_likelihood</code>:</li>
<li><code>project</code></li>
<li><code>l1_distance</code></li>
<li><code>projected_ascent</code>: ?</li>
<li><code>top</code></li>
<li><code>top5</code></li>
<li><code>is_anchorword</code></li>
<li><code>near_anchorword</code></li>
<li><code>sparse_topic</code></li>
<li><code>superflat_topic</code></li>
<li><code>top_likelihood_support</code></li>
<li><code>test_inference</code></li>
<li><code>safe_mkdir</code></li>
<li><code>write_doc</code></li>
<li><code>write_flat</code></li>
<li><code>estimate_support</code></li>
<li><code>estimate_support_map</code></li>
<li><code>split_heldout</code></li>
<li><code>heldout_score</code></li>
<li><code>held_out_probability_ascent</code></li>
<li><code>nearest_neighbors</code></li>
<li><code>get_train_data</code></li>
</ul>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>
<entry>
    <title>[DKLPRS] Markov logic</title>
    <link href="http://holdenlee.github.io/notebook/posts/tcs/machine_learning/probabilistic/markov_logic.html" />
    <id>http://holdenlee.github.io/notebook/posts/tcs/machine_learning/probabilistic/markov_logic.html</id>
    <published>2016-05-17T00:00:00Z</published>
    <updated>2016-05-17T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>[DKLPRS] Markov logic</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-05-17 
          , Modified: 2016-05-17 
	</p>
      
       <p>Tags: <a href="/tags/graphical%20model.html">graphical model</a>, <a href="/tags/probabilistic%20model.html">probabilistic model</a>, <a href="/tags/logic.html">logic</a>, <a href="/tags/FOL.html">FOL</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"> <ul>
 <li><a href="#markov-logic-questions">Markov logic: Questions</a><ul>
 <li><a href="#structure-learning-how-do-we-even-find-the-formulae">6.3 Structure learning: how do we even find the formulae?</a></li>
 </ul></li>
 <li><a href="#ksj-a-general-stochastic-approach-to-solving-problems-with-hard-and-soft-constraints">[KSJ] A general stochastic approach to solving problems with hard and soft constraints</a></li>
 <li><a href="#scraps">Scraps</a></li>
 <li><a href="#directions">Directions</a></li>
 </ul> </div>

  <div class="blog-main">
    <h2 id="markov-logic-questions">Markov logic: Questions</h2>
<ul>
<li>Consider a statement like Moral(x) <span class="math inline">\(\implies\)</span> Happy(x). Consider 2 worlds: one where most people are moral, and all but 5 moral people are happy, another where only 5 people are moral, and they are all unhappy. It seems in the Markov model they would have the same weight, when the statement is represented as <span class="math inline">\(\neg\text{Moral}(x) \wedge \text{Happy}(x)\)</span>. Do we want this? I’m guessing this is easier than only restricting to moral people, because that involves dividing.</li>
<li>I don’t understand the terminology used in LazySAT. My understanding of <code>active_atoms</code> is that we take every clause that is not satisfied and add ALL of its atoms. (Ex. if we have a formula <span class="math inline">\(Friend(A,B)\implies Happy(A) \wedge Happy(B)\)</span>, and <span class="math inline">\(\text{Friend}(x,y) \wedge \neg \text{Happy}(x)\wedge \text{Happy}(y)\)</span>, then both <span class="math inline">\(x,y\)</span> are considered active atoms.)
<ul>
<li>But then choosing unsatisfied <span class="math inline">\(x\)</span> and <span class="math inline">\(v_f\sim c\)</span>, it’salways true that <span class="math inline">\(v\in\)</span> active atoms, whereas in Algorithm 2, they consider when <span class="math inline">\(v\nin\)</span> active atoms!</li>
<li>Note DeltaCost can be easily calculated. Local flipping doesn’t require recalculation of the whole cost.</li>
<li>Shouldn’t DeltaCost be a function of a setting of variables, not a variable? Or is it like the derivative in the direction of variable <span class="math inline">\(v\)</span>, i.e., what you’d get by flipping <span class="math inline">\(v\)</span>? But you may need to flip two variables in a clause at the same time to get something better!</li>
</ul></li>
<li>I don’t understand the explanation on p. 8: The initial active atoms are all those appearing in clauses that are unsatisfied if only the atoms in the database are true, and all others are false.</li>
<li>More fundamentally, I don’t understand what the database is!</li>
<li>At each step, take a random unsatisfied clause. Maintain a set of active atoms.
<ul>
<li>With probability <span class="math inline">\(p\)</span> choose a random variable from the clause.</li>
<li>Otherwise, choose the non-active variable <span class="math inline">\(v\)</span> in <span class="math inline">\(c\)</span> is lowest DeltaCost. (Why do we ignore active atoms? Isn’t it true that flipping them can also decrease the cost?)</li>
<li>Add the chosen variable <span class="math inline">\(v_f\)</span> to <code>active_atoms</code> and add activated clauses. Flip <span class="math inline">\(v_f\)</span>.</li>
<li>(Do we not want variables to be flipped twice?)</li>
<li>NO: we choose the variable (active OR non-acive) in <span class="math inline">\(c\)</span> with lowest DeltaCost. It’s merely saying that we have to do a more involved computation if the variable is non-active. (Why? This has something to do with the DB vs. KB, no comprendo.)</li>
<li>At the beginning, only include active atoms/clauses. Think of these as the dangerous atoms—flipping them could make a clause not satisfied. These clauses are the only clauses we will need to worry about. Add clauses to the active set only if we need to worry about them.</li>
</ul></li>
<li>So what’s the difference between SAT and LazySAT? I think it’s just: are you summing over all possible instantiations (unnecessary!), or just looking at the differences when you flip a variable? You can ignore formulas that don’t invove the current variable.</li>
</ul>
<p>(OK to have some kind of “complexity measure” of formulae saying how amenable they are to random-walk methods?)</p>
<ul>
<li>Intuition about deterministic vs. non-deterministic dependencies. (Tradeoff between search and following stochasticity cf. gradient? The smaller the weights the easier the flow but the lower the probability is to find a satisfying instance?)</li>
<li>MC-SAT has hard satisfiability. Look at all clauses satisfied in the last step; the larger the weight, the more likely you are to force it to be satisfied next step. It calls on a uniform SAT solver (which doesn’t really exist—but there are things that do well in practice).</li>
<li>p. 12. Indistinguishable objects. What if you’re just strying to find a distribution that’s close, ex. for at most binary relations, look at the proportion of <span class="math inline">\(\{a,b\}\)</span> with values of <span class="math inline">\(u_1(a),\ldots, u_1(b),\ldots, b_1(a,b),\ldots\)</span> where <span class="math inline">\(u\)</span> are unary and <span class="math inline">\(b\)</span> are binary relations.</li>
</ul>
<p>Perhaps I need to learn about databases.</p>
<ul>
<li>What is the closed-world assumption?</li>
</ul>
<p>Wait, you aren’t flipping nodes! I thought of the nodes as the actors, and unary functions on them. But are the nodes supposed to be formulae? Like <span class="math inline">\(u_1(x)\)</span>, <span class="math inline">\(b_1(x,y)\)</span>, and everything not in it is false?</p>
<p>An atom is not a node but predicates applied to nodes!</p>
<p>(Note the logical contradictions is not on the level of node values, but on the formulas relating them? Don’t have <span class="math inline">\(A\wedge B\)</span> as nodes, only have <span class="math inline">\(A\)</span>, <span class="math inline">\(B\)</span>.) Atoms are formulas without connectives like <span class="math inline">\(\wedge, \implies,\forall...\)</span></p>
<blockquote>
<p>basic inference problem in first-order logic is to determine whether a knowledge base KB entails a formula F, i.e., if F is true in all worlds where KB is true</p>
</blockquote>
<p>Sparsity in the sense that only the relations in the database can be true; everything else has to be false?</p>
<p>Also, I don’t understand how to deal with intermediate functions like <span class="math inline">\(f(x,g(y))\)</span>. It seems there’s too many possible values of <span class="math inline">\(g\)</span>!</p>
<p>Approaches to get past intractability:</p>
<ul>
<li>The <strong>pseudo-likelihood</strong> is <span class="math inline">\(\ln \Pj_w^*(X=x) = \sumo ln \log \Pj_w(X_l=x_l|MB_x(X_l))\)</span> (markov blanket). (When is this a good approx?)</li>
<li><strong>Discriminative weight learning</strong>. Partition into evidence and query atoms and calculate conditional log-likelihood. (cf. RBM)</li>
</ul>
<h3 id="structure-learning-how-do-we-even-find-the-formulae">6.3 Structure learning: how do we even find the formulae?</h3>
<ul>
<li>Inductive logic programming #lookup. But use evaluation function based on pseudo-likelihood rather than accuracy and coverage.</li>
</ul>
<p>19 Dependencies are really probabilistic. Ex. two titles sharing a word are more likely to be the same?</p>
<p>Applications.</p>
<ul>
<li>Entity resolution (when do things refer to the same object? Include formulae like transitivity of equality.)</li>
<li>Citation resolution. (Ex. which article corresponds to which citation, when are they the same? You can imagine there’s some general rules which would do well.)</li>
</ul>
<p>Lifted inference, lifted resolution in FOL #lookup</p>
<h2 id="ksj-a-general-stochastic-approach-to-solving-problems-with-hard-and-soft-constraints">[KSJ] A general stochastic approach to solving problems with hard and soft constraints</h2>
<ul>
<li>My understanding of “partitioning”: solve a problem hierarchically: break into smaller pieces, find a list of good solutions of each piece, and then figure out how to combine those solutions.</li>
<li>Q: is there an algorithm agnostic to the encoding in some sense? (Doubtful—probably can embed crypto problems? But what if you only allow the simplest transformations?)</li>
<li>WalkSAT <em>does</em> only flip one variable at a time.</li>
<li>Hard constraints have greater weight than soft constraints.</li>
</ul>
<p>I think people do MCMC in problem-solving. Try to tweak things locally. Sometimes though there’s a larger restructuring—view it as a step in a more abstract space, a more abstract transformation?</p>
<h2 id="scraps">Scraps</h2>
<p>(Patterns you construct are patterns you could have found?)</p>
<p>Goal in learning should be to find the formula with weights which decrease the entropy the most?</p>
<p>SAT refutations corresponding to reasonable mathematical statements have short proofs but not the SAT framework? (Any way to compile down?)</p>
<h2 id="directions">Directions</h2>
<ul>
<li>First, understand the classical results on learning and inference in graphical models.</li>
<li>Understand MCMC and variational inference, and the situations where they have provable guarantees.</li>
<li>Try to formulate the simplest problem where you do have some element of first-order logic (ex. a statement with <span class="math inline">\(\forall\)</span>) and/or some combinatorial complexity.</li>
<li>What’s a test problem in this domain? They give citation resolution. Maybe this is practical but it seems like a rather boring problem!</li>
<li>Understand some ideas from the logic-learning community (inductive logic programming, etc.) <a href="https://en.wikipedia.org/wiki/Inductive_logic_programming">ILP</a>. Machine learning <span class="math inline">\(\cap\)</span> programming languages???</li>
</ul>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>
<entry>
    <title>Sampling</title>
    <link href="http://holdenlee.github.io/notebook/posts/tcs/machine_learning/optimization/sampling.html" />
    <id>http://holdenlee.github.io/notebook/posts/tcs/machine_learning/optimization/sampling.html</id>
    <published>2016-05-17T00:00:00Z</published>
    <updated>2016-05-17T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>Sampling</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-05-17 
          , Modified: 2016-05-17 
	</p>
      
       <p>Tags: <a href="/tags/sampling.html">sampling</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"> <ul>
 <li><a href="#markov-chain-monte-carlo">Markov Chain Monte Carlo</a><ul>
 <li><a href="#metropolis-hastings">Metropolis-Hastings</a></li>
 <li><a href="#gibbs-samplingglauber-dynamics">Gibbs sampling/Glauber dynamics</a></li>
 </ul></li>
 </ul> </div>

  <div class="blog-main">
    <p>A TOC for the sampling faction of optimization, including</p>
<ul>
<li>MCMC
<ul>
<li>Metropolis-Hastings (rejection sampling)</li>
<li>Gibbs sampling</li>
</ul></li>
<li>Variational inference</li>
</ul>
<p>From a TOC viewpoint:</p>
<ul>
<li><a href="https://dl.dropboxusercontent.com/u/27883775/wiki/math/pdfs/counting_and_stat_phys1.pdf">Counting and statistical physics</a> (Local file: C:/Users/Owner/Dropbox/Math/Computation/general/tnoc)</li>
<li>Andrej’s talk at Gems, Section 9 <a href="https://dl.dropboxusercontent.com/u/27883775/wiki/math/pdfs/gems_of_tcs.pdf">here</a></li>
</ul>
<p>See <a href="http://www.minimizingregret.com/2016/03/the-two-cultures-of-optimization.html">two cultures of optimization</a>.</p>
<h2 id="markov-chain-monte-carlo">Markov Chain Monte Carlo</h2>
<p>This is a catch-all term for <em>any</em> method for sampling by running a Markov chain on the state space.</p>
<p>Formally, running MCMC for a distribution <span class="math inline">\(\pi\)</span> on <span class="math inline">\(\Om\)</span> means running a Markov chain <span class="math inline">\(X_t\)</span> on <span class="math inline">\(\Om\)</span> with stationary distribution <span class="math inline">\(\pi\)</span>.</p>
<h3 id="metropolis-hastings">Metropolis-Hastings</h3>
<p>Suppose * <span class="math inline">\(\Om\)</span> has a graph structure where at each vertex we can easily choose a neighbor. (Ex. for valid colorings, it is easy to tweak a valid coloring to get another one, but it is hard to simply choose a random coloring.) * We want to sample a distribution on <span class="math inline">\(\Om\)</span>, but all we know is a function <span class="math inline">\(f\)</span> such that <span class="math inline">\(P(x) \prop f(x)\)</span>. Equivalently, we only know the ratios between probabilities.</p>
<p>Can we sample from <span class="math inline">\(\Om\)</span>? Yes, using Metropolis-Hastings. We already have a way to choose a neighbor randomly. However, running this Markov chain may give the wrong stationary distribution, so we sometimes “reject” a proposed move, using what we know about the desired distribution.</p>
<p><strong>Definition</strong>. Consider a Markov chain where the probability of transitioning from <span class="math inline">\(x\)</span> to <span class="math inline">\(y\)</span> is <span class="math inline">\(\Psi(x,y)\)</span>. The <strong>Metropolis chain</strong> corresponding to <span class="math inline">\(\Psi\)</span> is <span class="math display">\[P(x,y) = \begin{cases}
\Psi(x,y) \ba{\fc{\pi(y)\Psi(y,x)}{\pi(x) \Psi(x,y)} \wedge 1},&amp;\text{if } y\ne x\\
1- \sum_{z:z\ne x} \Psi(x,z) \ba{\fc{\pi(z)\Psi(z,x)}{\pi(x)\Psi(x,z)}\wedge 1},&amp;\text{if }y=x.
\end{cases}.\]</span> In particular, if <span class="math inline">\(\Psi\)</span> is symmetric, then it cancels out in the ratio.</p>
<p><strong>Theorem</strong>. The stationary distribution of this Metropolis chain is <span class="math inline">\(\pi\)</span>.</p>
<em>Proof/derivation</em>. At <span class="math inline">\(x\)</span>, we propose to move to <span class="math inline">\(y\)</span> with probability <span class="math inline">\(\Psi(x,y)\)</span>. For the new chain, let’s accept this move with probability <span class="math inline">\(a(x,y)\)</span>, and reject with probability <span class="math inline">\(1-a(x,y)\)</span> and stay at the current location. Then <span class="math inline">\(P(x,y) = \Psi(x,y) a(x,y)\)</span> for <span class="math inline">\(y\ne x\)</span>. For <span class="math inline">\(\pi\)</span> to be stationary, we want detailed balance,
\begin{align}
\pi(x) \Psi(x,y) a(x,y) &amp;= \pi(y) \Psi(y,x) a(y,x)\\
\fc{ a(x,y)}{a(y,x)} &amp;= \fc{\pi(y) \Psi(y,x)}{\pi(x) \Psi(x,y)}.
\end{align}
<p>We want <span class="math inline">\(a\)</span> to be as large as possible for fast mixing, so choose <span class="math inline">\(a\)</span> as defined.</p>
<p>Examples: coloring, optimization</p>
<h3 id="gibbs-samplingglauber-dynamics">Gibbs sampling/Glauber dynamics</h3>
<!--Q: is detailed balance necessary?-->

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>
<entry>
    <title>NLP</title>
    <link href="http://holdenlee.github.io/notebook/posts/tcs/machine_learning/nlp/2016-senior-presentations.html" />
    <id>http://holdenlee.github.io/notebook/posts/tcs/machine_learning/nlp/2016-senior-presentations.html</id>
    <published>2016-05-14T00:00:00Z</published>
    <updated>2016-05-14T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>NLP</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-05-14 
          , Modified: 2016-05-14 
	</p>
      
       <p>Tags: <a href="/tags/nlp.html">nlp</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"> <ul>
 <li><a href="#personality-through-sentiment-analysis-sidharth">Personality through sentiment analysis (Sidharth)</a><ul>
 <li><a href="#harvard-inquirer">Harvard Inquirer</a></li>
 <li><a href="#general-event-analysis">General event analysis</a></li>
 </ul></li>
 <li><a href="#answering-sat-reading-comprehension-questions-with-tensor-decomposition-and-neural-networks-saahil-madge">Answering SAT reading comprehension questions with tensor decomposition and neural networks (Saahil Madge)</a><ul>
 <li><a href="#tensor-factorization-actually-matrix-factorization-optimizing-over-2-matrices">Tensor factorization (actually, matrix factorization, optimizing over 2 matrices)</a></li>
 <li><a href="#memory-networks">Memory networks</a></li>
 <li><a href="#results">Results</a></li>
 </ul></li>
 <li><a href="#automated-wordnet-construction-using-word-embeddings-misha">Automated WordNet construction using word embeddings (Misha)</a><ul>
 <li><a href="#associate-words-with-synsets">Associate words with synsets</a></li>
 <li><a href="#infer-word-relations">Infer word relations</a></li>
 <li><a href="#translational-synset-matching">Translational synset matching</a></li>
 </ul></li>
 </ul> </div>

  <div class="blog-main">
    <p>NLP group meeting 5-14-16</p>
<h2 id="personality-through-sentiment-analysis-sidharth">Personality through sentiment analysis (Sidharth)</h2>
<ul>
<li>Big five personality</li>
<li>Predicting personality from Twitter data, etc.</li>
</ul>
<p>Longitudinal, with 5000 documents per person spanning years, with data from private correspondences (more unfiltered). Use <a href="http://rotunda.upress.virginia.edu/founders">presidential letters</a> from Adams, Jefferson, and Washington.</p>
<!-- I am so much more expressive and unreserved in the expression of my sentiments-->
<h3 id="harvard-inquirer">Harvard Inquirer</h3>
<p>Use Harvard Inquirer Categories which puts words in categories (ex. “strong” contains audacity, battle, wealthy, charisma, clever, climax, further). These are hand-crafted categories. There are 200 categories; number of words vary. Words can appear in multiple categories.</p>
<p>Start with a specific event and analyze the way they respond. For example, use Washington’s early campaigns from the French and Indian War. Find keywords and phrases relating specifically to the event. Use these keywords to find other letters in the same category.</p>
<p>Differentiate between attitude in these letters and overall attitude by the difference of means statistical test. There were differences in overstatement, negative, understtement, vice, and arousal (negative).</p>
<p>In the early French and Indian War, Washington had limited resources, Americans would desert, etc.</p>
<h3 id="general-event-analysis">General event analysis</h3>
<p>Use Lasswell categories for general event analysis:</p>
<ul>
<li>power gain, loss, conflict, cooperation</li>
<li>respect gain or loss</li>
<li>affection gain or loss</li>
<li>wealth</li>
<li>well-being loss</li>
</ul>
<p>Use a Bayesian classifier for all letters. Put in the category that it correlates with the most, provided it’s at least a certain threshold.</p>
<p>Washington and Adams react to power loss differently. For example, Washington was more active and passive, and both understated and overstated more.</p>
<p>Vice put together with self-pronouns means self-doubt.</p>
<p>The goal was to find an interesting way to measure the resilience of a president in the face of tough events. I found some metrics which yielded useful, informative results.</p>
<p>Another example: Adams was pessimistic and powerless about not being able to go home; Jefferson was closely involved with the education of his kids.</p>
<p>How to use this? Facebook posts, emails (Clinton, Enron, Wikileaks). Panama papers?</p>
<h2 id="answering-sat-reading-comprehension-questions-with-tensor-decomposition-and-neural-networks-saahil-madge">Answering SAT reading comprehension questions with tensor decomposition and neural networks (Saahil Madge)</h2>
<!-- you spend your whole life stuck in the labyrinth-->
<p>Goal: create a system for machine comprehension. Previous work focused on reading questions for young children (MCTest), with very low accuracy on “why” questions. Most of these are “bag of words” models.</p>
<p>But we want to capture semantic and structural information. We use SAT questions, which are longer and more complex, and answering requires understanding deeper information about the context. They use different words, “angry” vs. “incensed”, etc.</p>
<h3 id="tensor-factorization-actually-matrix-factorization-optimizing-over-2-matrices">Tensor factorization (actually, matrix factorization, optimizing over 2 matrices)</h3>
<p>We use a knowledge graph, consist of entities and relations <span class="math inline">\(\an{e_1,r,e_2}\)</span>. Entities are nodes, and relations are directed edges. We can ask queries <span class="math inline">\(\an{e_1,?,e_2},\an{e_1,r,?}\)</span>.</p>
<p>(Google’s knowledge graph is FreeBase, 300GB. Nell at Carnegie Mellon is trained to extract triples from the Internet.)</p>
<ul>
<li>First, convert text to sets of triples on the knowledge graph. (Use the Stanford NLP toolkit.)</li>
<li>Use word2vec to convert questions to queries on the graph.</li>
</ul>
<p>We focus on Subject-Verb-Direct object (ex. dog likes sausage) or copular relations (subject and description, ex. dog is green). <!-- --></p>
<p>We used Stanford high-dependency parser. We can do pronoun-antecedent resolutions as well.</p>
<p>Represent the knowledge graph as a 3-D array where each <span class="math inline">\(X_k\)</span> is the adjacency matrix for relation type <span class="math inline">\(k\)</span>. Approach: find rank <span class="math inline">\(r\)</span> approximation <span class="math display">\[X_k\approx AR_kA^T,\]</span> (<span class="math inline">\(n\times r, r\times r\)</span>, <span class="math inline">\(n\)</span> is the number of entities) for latent features. Use alternating least squares, semantically smoth embedding. Answer questions using factorization. (The slices are dependent because the <span class="math inline">\(A\)</span> is shared.)</p>
<p>Stories about a character make one of the slices dense; explanatory articles are a lot sparser. Most tensors are sparse. <!-- slices are not symmetric. (one way) binary and sparse --></p>
<p>(Each slice is factorized separately? Use <a href="http://www.mit.edu/~mnick/">Rescal</a>.)</p>
<!-- entries.-->
<h3 id="memory-networks">Memory networks</h3>
<p>Use neural network to predict answers. Embed the tensor and vectorized query <span class="math inline">\(q\)</span> as inputs. Train the network to recognize what information is relevant, and output an answer choice.</p>
<h3 id="results">Results</h3>
<p>Tensor model trains independently, while the NN needs to be trained on 2/3 of the questions. Tensor model is consistent but with low ceiling.</p>
<p>The tensor model completes a triple rather than just give an answer choice.</p>
<!-- small data. transfer learning. replaceable characters-->
<!-- metamind. semantic vs. episodic. DMM. default neural network -->
<h2 id="automated-wordnet-construction-using-word-embeddings-misha">Automated WordNet construction using word embeddings (Misha)</h2>
<p>Can we use a mathematical approach to constructing the WordNet graph?</p>
<p>Current automated methods include merging or extending. Use multi-language translations (French WordNet), scrape Wiktionary, or use rule-based/automatic methods.</p>
<ol type="1">
<li>Can we associate words with synsets (sets of synonyms)? Use translations. <!--meaning independent of word--></li>
<li>Can we find relations between synsets or words? Not yet. (Only using translation.)</li>
<li>Can we link to synsets in the Princeton WordNet? Yes.</li>
</ol>
<p>Use word embeddings. Optimize the squared norm objective <span class="math display">\[\min_{v\in \R^d, C\in \R} \sum_{(i,j)\in [V]^2} f(X_{ij}) (\ve{v_w+v_j}_2^2 + C-\log X_{ij})^2.\]</span> (Distributional assumption.) Word vectors have been used in solving analogies, named-entity recognition, and word similarity.</p>
<p>Use the discourse model: a corpus is generated by a random walk over the discourse space <span class="math inline">\(\R^d\)</span>. <!-- lower bound for d. Why can't you take d=1,2? --></p>
<h3 id="associate-words-with-synsets">Associate words with synsets</h3>
<p>Arora et al. used a learned dictionary of atoms to find representation of the meanings of a word <span class="math inline">\(w\in V\)</span> with a dictionary <span class="math inline">\(A\in \R^{K\times d}\)</span> and sparsity constraint <span class="math inline">\(s\)</span>:</p>
<ol type="1">
<li>Find <span class="math inline">\(R_w\in \R^K\)</span> minimizing <span class="math inline">\(\ve{v_w-R_w^TA}_2\)</span> such that <span class="math inline">\(\ve{R_w}_0\le s\)</span>.</li>
<li>For each <span class="math inline">\(i\)</span> such that <span class="math inline">\(R_{w,i}&gt;0\)</span> find a dense cluster <span class="math inline">\(C\sub \R^d\)</span> of word vectors close to <span class="math inline">\(A_i\in \R^d\)</span>.</li>
<li>For each cluster <span class="math inline">\(C\)</span>, the set of words <span class="math inline">\(\set{w'}{v_{w'}\in C}\)</span> represents one meaning of <span class="math inline">\(w\)</span>.</li>
</ol>
<h3 id="infer-word-relations">Infer word relations</h3>
<p>Consider hypernyms.</p>
<ul>
<li>For supervised learning, use SVM or logistic regression classification on word pair features.</li>
<li>For unsupervised learning, learn a mixture of 2 gaussians on feature vectors for the word pair, or prune with similarity thresholds or requiring shared atoms.</li>
</ul>
<p>This fails on real datasets because of word-relation sparsity and similar relations problem (problems discerning hypernyms and cohypernyms).</p>
<p>There is a spatial distinction between hyponym-hypernym and random pairs, but not between hyponym-hypernym and co-hypernym (sharing the same hypernym) pairs.</p>
<h3 id="translational-synset-matching">Translational synset matching</h3>
<p>We can link to synsets in the Princeton WordNet.</p>
<p>Given <span class="math inline">\(w\)</span> in a foreign language to synsets in the Princeton WordNet,</p>
<ol type="1">
<li>find meanings of <span class="math inline">\(w\)</span> using polysemy.</li>
<li>find the synsets of all English translations of <span class="math inline">\(w\)</span>.</li>
<li>Match each meaning to one of the synsets by a similarity measure between the words in the meaning and the foreign languge translation of the synset definition.</li>
</ol>
<!--Sometimes don't match to correct atom. -->
<p>Ex. The word “container” doesn’t exist in Dutch. (cf. Hofstadter, Surfaces and Essences.)</p>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>
<entry>
    <title>Weekly summary 5-14-16</title>
    <link href="http://holdenlee.github.io/notebook/posts/summaries/2016-05-14.html" />
    <id>http://holdenlee.github.io/notebook/posts/summaries/2016-05-14.html</id>
    <published>2016-05-11T00:00:00Z</published>
    <updated>2016-05-11T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>Weekly summary 5-14-16</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-05-11 
          , Modified: 2016-05-11 
	</p>
      
       <p>Tags: <a href="/tags/none.html">none</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"></div>

  <div class="blog-main">
    <p>Machine learning</p>
<ul>
<li>Presentation on Language Games
<ul>
<li>TODO: Find some theoretical problems.</li>
</ul></li>
<li>NMF
<ul>
<li>Why can we use the regular pseudoinverse? (CONTINUE)</li>
<li>TODO: Search literature, talk to Andrej, Tengyu for ideas</li>
<li>TODO: Look at Freddy’s code and do some experiments.</li>
</ul></li>
<li>NLP learning
<ul>
<li>Read Mike Collins’s notes</li>
<li>Skimmed [CC14] on NMF.</li>
<li>TODO: Read book on NLP.</li>
</ul></li>
<li><a href="../tcs/machine_learning/matrices/streaming_PCA.html">Streaming PCA, Yuanzhi Li</a>.</li>
<li>TODO: Finish reviewing rest of BV</li>
<li>TODO: Read lots, start keeping track of problems and techniques.</li>
</ul>
<!--After NIPS, find collaborations with other ML students.-->
<p>Coding</p>
<ul>
<li>Understood SoS relaxation approach.</li>
<li>Started reading CSP refutation paper.
<ul>
<li>TODO: Read more of it, in particular, understand how to convert it to SoS language.</li>
</ul></li>
<li>Tried “covering with convex sets” but seems difficult.</li>
<li>TODO: try approach with modulus of convexity.</li>
<li>TODO: understand SDP extension approach.</li>
<li>TODO: other approaches?</li>
</ul>
<p>TCS</p>
<ul>
<li>Log-sobolev inequalities</li>
</ul>
<p>TODO</p>
<ul>
<li>Review statistical physics.</li>
<li>Review metric embeddings/geometric inequalities (MAT529) (<span class="citation" data-cites="Kiran">@Kiran</span>).</li>
<li>Things left to summarize:
<ul>
<li>Convex geometry</li>
<li>Optimization (BV)</li>
<li>Optimization on manifolds (AMS)</li>
</ul></li>
<li>Make a summer reading list. (<span class="citation" data-cites="Arora">@Arora</span>)
<ul>
<li>General TCS (randomized algorithms, approximation algorithms)</li>
<li>Probability (finish)</li>
<li>Advanced probability
<ul>
<li>? Martingales</li>
<li>Concentration inequalities</li>
<li>Stochastic processes</li>
<li>Random matrices</li>
</ul></li>
<li>Amit Singer’s course</li>
<li>Optimization (<span class="citation" data-cites="Hazan">@Hazan</span> for recommendations.)</li>
<li>? ATaAP</li>
<li>Topics
<ul>
<li>Variational inference and MCMC
<ul>
<li>Volume estimation??</li>
</ul></li>
<li>Graphical models</li>
</ul></li>
</ul></li>
</ul>
<p>Other</p>
<ul>
<li>Olivier’s generals. TODO: Ask about CertiCoq.</li>
</ul>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>
<entry>
    <title>Towards a better understanding of streaming PCA (Yuanzhi Li)</title>
    <link href="http://holdenlee.github.io/notebook/posts/tcs/machine_learning/matrices/streaming_PCA.html" />
    <id>http://holdenlee.github.io/notebook/posts/tcs/machine_learning/matrices/streaming_PCA.html</id>
    <published>2016-05-10T00:00:00Z</published>
    <updated>2016-05-10T00:00:00Z</updated>
    <summary type="html"><![CDATA[
<div class="container">
  <div id="content">
    <div class="page header">
      <h1>Towards a better understanding of streaming PCA (Yuanzhi Li)</h1>
    </div>
    <div class="info">
      
       
        <p>Posted: 2016-05-10 
          , Modified: 2016-05-10 
	</p>
      
       <p>Tags: <a href="/tags/pca.html">pca</a></p> 
    </div>
    
  </div>
  <!--/div-->

  <div class="toc"></div>

  <div class="blog-main">
    <p>Given data <span class="math inline">\(x_i\in \R^d\)</span> sampled from an unknown distribution with <span class="math inline">\(\E[x_ix_i^T]=X\)</span>, where <span class="math inline">\(x\)</span>’s are independent, compute top <span class="math inline">\(k\)</span> eigenvectors of <span class="math inline">\(X\)</span>.</p>
<p>(For the asymmetric <span class="math inline">\(xy^T\)</span> case, finding the top <span class="math inline">\(k\)</span> is harder.)</p>
<p>Normal SVD is not memory efficient; you need to store a <span class="math inline">\(d\times d\)</span> matrix. Goal: compute <span class="math inline">\(k\)</span>-SVD in space <span class="math inline">\(O(kd)\)</span>.</p>
<p>A popular heuristic is to start with a random initial matrix <span class="math inline">\(U_0\in \R^{d\times k}\)</span>. On receiving <span class="math inline">\(x_i\)</span>, update <span class="math inline">\(U_i=(I+\eta_i x_ix_i^T)U_{i-1}\)</span> and let <span class="math inline">\(U_i=QR(U)\)</span> (orthogonalization). Let <span class="math inline">\(\eta_i\sim \rc{i}\)</span>. (Orthogonalization is not a projection. It’s a retraction onto the manifold.)</p>
<p>This works very well in practice but it’s complicated to analyze from a theoretical point of view.</p>
<p>Let <span class="math inline">\(g=\si_k-\si_{k+1}\)</span>. The bound is <span class="math inline">\(\fc{k}{g^3T}\)</span>. We use the measure <span class="math inline">\(\E\ba{\ve{W^TU}_F^2}\)</span> (projection to last <span class="math inline">\(k\)</span> singular values. <span class="math inline">\(U\)</span> is the output, <span class="math inline">\(W\)</span> has the last <span class="math inline">\(d-k\)</span> singular values).</p>
<p>(Rank 1 is just gradient descent; there is no projection.)</p>
<p>Consider the offline case first: we get <span class="math inline">\(X\)</span> directly instead of <span class="math inline">\(x_ix_i^T\)</span>. The algorithm is analogous to the <strong>subspace power method</strong>.</p>
<ul>
<li>Start with random <span class="math inline">\(U_0\in R^{d\times k}\)</span>.</li>
<li><span class="math inline">\(U=(I+\eta_iX)U_{i-1}\)</span>, <span class="math inline">\(U_i = QR(U)\)</span> decomposition. (This is not linear.)</li>
</ul>
<p>We can do the QR decomposition in the last step. It seems nonlinear, how can it commute? In practice you need to do QR decomposition for numerical accuracy. “To TCS people” you can move QR decomposition to the end.</p>
<p>Analysis: Let <span class="math inline">\(U_i = UR, U_{i+1} = U'R'\)</span>. Then <span class="math inline">\(U_{i+1} = (I+\eta_{i+1}X)(I+\eta_iX) U_{i-1}RR'\)</span>.</p>
<p>(For a regret bound, you can’t do this.)</p>
<p>This is how subspace QR is proved: you push everything to the end. <!-- mult update project at end. --></p>
<p>Let <span class="math inline">\(V\)</span> contain the top <span class="math inline">\(k\)</span> eigenvectors and <span class="math inline">\(W\)</span> the rest. Suppose <span class="math inline">\(v_i=e_i\)</span>. Then for <span class="math inline">\(P_t=\prod (I+\eta_{t-i}X)\)</span>, <span class="math inline">\(P_t=\smatt{\text{large}}00{\text{small}}\)</span>. Multiplying by a random initialization gives <span class="math inline">\((\text{large}\,\text{small})^T\)</span>.</p>
<p>In the online setting, let <span class="math inline">\(P_t=(I+\eta_{t-i}x_{t-i}x_{t-i}^T)\)</span>. The offdiagonal part <span class="math inline">\(W_t^TP_tV\)</span> is small compared to the diagonal part. <!--Ohad strts with something close in Frobenius norm. Once you get in neighborhood, it doesn't wander away. --></p>
<ol type="1">
<li>Show the minimal singular value of <span class="math inline">\(V^TP_tV\)</span> is large. This is not easy to bound. (The maximal one can be bounded by trace norm; exchange <span class="math inline">\(\E\)</span> and <span class="math inline">\(\Tr\)</span>.) <!--larger than singular value: martingale concentration-->
<ol type="1">
<li>Show <span class="math inline">\(\Tr[(V^TP_tV)^{-T}(V^TP_tV)^{-1}]\)</span> is small. This requires a lot of computation. (Use Sherman-Morrison formula for inverse for rank 1 update.) But this is suboptimal; lose an <span class="math inline">\(\eta\)</span> factor. <!--use Sherman-Morrison, formula for inverse for rank 1 update--></li>
<li><p>Attempt 2: show concentration. But it doesn’t work because it’s a product, not a sum. It doesn’t even concentrate in the multiplicative scale. <!--The world is against us, lower bounds are so hard --Sanjeev --></p>
<p>Why? Suppose <span class="math inline">\(k=1\)</span>. Think of <span class="math inline">\(X\)</span> as diagonal matrix with first eigenvale large and rest small. <span class="math inline">\((I+\eta e_1e_1^T)e_1e_1^T\)</span>. There is some chance that <span class="math inline">\(x_t\)</span> has some weight in the first and last entry. Then the <span class="math inline">\((1,d)\)</span> entry of the product is <span class="math inline">\(\rc{4}\eta_t\)</span>. <!-- In k=1, do epoching. This is not memory efficient? --></p>
Unlike the offline setting, <span class="math inline">\(x_t\)</span> is not perfectly aligned with the eigenspace of <span class="math inline">\(X\)</span>; it can grab something from the eigenvector.</li>
<li><p>Try induction. Suppose <span class="math inline">\(P_tP_t^T\succ c_tI\)</span>. Then <span class="math inline">\(\E (P_{t+1}P_{t+1}^T) &gt; c_t(I + \eta_{t+1}X)\)</span>. <span class="math inline">\(\si_{\min}\)</span> is not concave; we don’t have <span class="math inline">\(\E[\si_{\min}(A)]&gt;\si_{\min}[\E(A)]\)</span>. (Counterexample: take <span class="math inline">\(A=e_ie_i^T\)</span> w.p. <span class="math inline">\(\rc d\)</span>.) <!-- after taking expected value sigma min is good --> Min singular value is not a good induction hypothesis. <!--hypnosis--> Summarize <span class="math inline">\(P_t\)</span> with a number. Let <span class="math inline">\(f:\)</span> matrix <span class="math inline">\(\to\)</span> value.</p>
<p>When you try to solve a hard problem, just write down the conditions. –Yin-Tat.</p>
“The ideal girlfriend”: <span class="math inline">\(f(P_t)\)</span>
<ul>
<li>is a lower bound on the minimal singular value of <span class="math inline">\(P_t\)</span>,</li>
<li>takes care of all singular values of <span class="math inline">\(P_t\)</span>,</li>
<li>has diminishing margin (larger singular value have smaller effect)</li>
<li>easy to compute and update The magical <span class="math inline">\(\al\)</span>-min-root barrier: unique solution <span class="math inline">\(\la\)</span> of <span class="math inline">\(\sumo in \rc{\si_i - \la} = \al\)</span>, <span class="math inline">\(\la\le \si_i\)</span>. <!-- monotone decreasing. ZAZ: equivalent to regularizer. barrier view. \la is like normalization parameter. s. entropy for q=1. --> It satisfies:</li>
<li>lower bounds the minimum singular value,</li>
<li>when <span class="math inline">\(\al\to \iy\)</span>, the barrier approaches <span class="math inline">\(\si_{\min}\)</span>.</li>
<li>diminishing influence: larger <span class="math inline">\(\si\)</span> have smaller contribution</li>
<li>monotone: <span class="math inline">\(A\succ B\implies f(A)\succ f(B)\)</span>. <!-- solution of crazy function--> <!-- consider distribution of singular values--> Formula: <span class="math inline">\(\sumo in \rc{\si_i-\la} = -\pdd{\la}\log \det(A-\la I)\)</span>. Matrix-determinant lemma (from Sherman-Morrison): <span class="math display">\[\log \det(A-\la I + uv^T) = \pdd{\la} \log \det(A_\la I) + \fc{\pdd{\la}v^T(A-\la I)^{-1}u}{1+v^T(A-\la I)^{-1}u}\]</span> Key observation: If <span class="math inline">\(A=U\Si U^T\)</span>, then <span class="math inline">\(\pdd{\la}v^T (A-\la I)^{-1} u = \sumo in \fc{(Uuv^TU^T)_{ii}}{(\si-\la)^2}\)</span>. <!-- barrier function increases--> <!-- von Neumann entropy more standard. (Elad and Tengyu uses characteric polynomial)--></li>
</ul>
<p><strong>Rank 1 update lemma</strong>: Let <span class="math inline">\(A\)</span> be a symmetric matrix. Then <span class="math inline">\(\E[f(A+uu^T)]&gt;f(A) + \si_{\min}(\E(uu^T))\)</span>.</p>
Apply this on <span class="math inline">\(P_{t+1}\)</span> vs. <span class="math inline">\(P_t\)</span>. Prove the theorem by martingale concentration. <!-- Matrix doesn't concentrate at all, but min singular value improves. --></li>
</ol></li>
<li><p>Bound <span class="math inline">\(W^TP_tW\)</span> term. Using trace? But <span class="math inline">\(W^TP_tW\)</span> is not small at all. <span class="math inline">\(W^TP_tW\)</span> “mixes” with <span class="math inline">\(V^TP_tV\)</span>; it can’t interlace.</p>
<p>Remove influence of <span class="math inline">\(V^TP_tV\)</span> from <span class="math inline">\(W^TP_tW\)</span>.</p>
<p>But they are not the same dimension.</p>
<p>Use random initialization: whp <span class="math inline">\(W^TP_tW(W^TQ)(V^TP_tQ)^{-1}\)</span> is small. <!-- Easiest to explain. PMI, weighted low rank approx, optimal regret for BCO, tight bound for approx convex opt, max-entropy disribution for calc partition, NMF without separability, SVD without being cool.--></p></li>
</ol>

  </div>

    

    <!-- Extension : Sharing buttons @ www.sharethis.com -->
    <span class='st_facebook_large' displayText='Facebook'></span>
    <span class='st_twitter_large' displayText='Tweet'></span>
    <span class='st_googleplus_large' displayText='Google +'></span>
    <span class='st_reddit_large' displayText='Reddit'></span>
    <span class='st__large' displayText=''></span>

    <div id="disqus_thread"></div>
    


  
    <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
  </div>
  
</div>
]]></summary>
</entry>

</feed>
